[{"path":"https://chop-cgtinformatics.github.io/ggswim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ggswim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/intro_ggswim.html","id":"building-swimmer-plots-with-aesthetic-mapping","dir":"Articles","previous_headings":"","what":"Building swimmer plots with aesthetic mapping","title":"Introduction to ggswim","text":"first example, let’s build swimmer plot using aes() dynamic mapping data. README, using ggswim’s internal patient_data list dataset. mentioned README, patient_status currently built reflect typical dataset wild. make work well appear nicely swimmer plot output, little bit preparation required. perform follow manipulations: Pivot data time_start time_end comprise single value. Add sorting variable, time_sorting, support arrangement using summed time values Arrange data cohort groups, time sorted values, subject ID factor levels Now, let’s make plot using ggswim() first add_marker() call:  great shapes points, wanted get fancy add labels like emojis? ggswim magic really shines. ggswim’s add_marker() allows types displays appear leg work rending appropriately legend layer. Let’s add another add_marker() call using medication_administration data:  great , look better right? Remember earlier mentioned can use existing ggplot2 functions ggswim outputs? Let’s implement can find bit joy plot:","code":"library(ggswim) library(ggplot2)  patient_data <- ggswim::patient_data patient_status <- patient_data$patient_status adverse_events <- patient_data$adverse_events medication_administration <- patient_data$medication_administration patient_status <- patient_status |>   tidyr::pivot_longer(c(time_start, time_end)) |>   dplyr::mutate(.by = subject_id,                 time_sorting = sum(value)) |>   dplyr::arrange(cohort, time_sorting) |>   dplyr::mutate(subject_id = factor(subject_id, levels = unique(subject_id))) p <- patient_status |>   ggswim(data = patient_status,          mapping = aes(x = value,                        y = subject_id,                        fill = cohort)) +   add_marker(data = adverse_events,              mapping = aes(x = time_of_event,                            y = subject_id,                            color = adverse_event_name,                            shape = adverse_event_name),              size = 5)  p p <- p +   add_marker(data = medication_administration,              mapping = aes(x = time_of_event,                            y = subject_id,                            label = medication,                            color = name),              label.size = NA, fill = NA, size = 5)  p p +   labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggtitle(\"My Swim Plot\") +   theme_minimal() +   scale_color_manual(     name = \"Markers\",     values = c(\"firebrick\", \"tomato\", NA, NA, \"chartreuse2\")   ) +   scale_shape_manual(     name = \"Markers\",     values = c(19, 15, 8, 18)   ) +   scale_fill_manual(     name = \"Lanes\",     values = c(\"steelblue\", \"cyan\")   )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/intro_ggswim.html","id":"building-swimmer-plots-with-individual-markers","dir":"Articles","previous_headings":"","what":"Building swimmer plots with individual markers","title":"Introduction to ggswim","text":"data made, received equal, ggswim developed cater dynamic mapping markers well static assignment markers. mean ? Well, let’s say instead setting mapped aes() “colour” variable, instead one marker dataset supplied want define color . Let’s split adverse_events one marker level per dataframe. work, also need specify aes() name argument add_marker() acts anchor point legend. Now, let’s plot similarly :  example showcases ggswim’s ability handle different data structures varying sources. Due flexible framework, users can customize output suit whatever best suits needs.","code":"adverse_event_cardio <- adverse_events |>   dplyr::filter(adverse_event_name == \"Cardiac Disorder\")  adverse_event_inf <- adverse_events |>   dplyr::filter(adverse_event_name == \"Infection\")  adverse_event_psych <- adverse_events |>   dplyr::filter(adverse_event_name == \"Psychiatric Disorder\") patient_status |>   ggswim(data = patient_status,          mapping = aes(x = value,                        y = subject_id,                        fill = cohort)) +   add_marker(data = adverse_event_cardio,              mapping = aes(x = time_of_event,                            y = subject_id,                            name = \"AE: Cardiac Disorder\"),              color = \"red\", size = 5) +   add_marker(data = adverse_event_inf,              mapping = aes(x = time_of_event,                            y = subject_id,                            name = \"AE: Infection\"),              color = \"blue\", size = 5, shape = 12) +   add_marker(data = adverse_event_psych,              mapping = aes(x = time_of_event,                            y = subject_id,                            name = \"AE: Psychiatric Disorder\"),              color = \"green\", size = 5, shape = 2) #> Warning: Duplicated aesthetics after name standardisation: colour #> Duplicated aesthetics after name standardisation: colour #> Duplicated aesthetics after name standardisation: colour"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/intro_ggswim.html","id":"additional-notes","dir":"Articles","previous_headings":"","what":"Additional notes","title":"Introduction to ggswim","text":"ggswim support missing data mapping aesthetics. Developers warned missing data may appear display, removed legend. ggswim() support mapping using colour argument add_marker() support mapping using fill argument emojis shapes properly appear, users may need switch graphics rendering device AGG","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2023). ggswim: Create Swimmer Plots ggplot2. R package version 0.1.0.","code":"@Manual{,   title = {ggswim: Create Swimmer Plots with ggplot2},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"ggswim","dir":"","previous_headings":"","what":"Create swimmer plots with - ggswim","title":"Create swimmer plots with - ggswim","text":"ggswim package provides convenient set commands easily create “swimmer” plots.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create swimmer plots with - ggswim","text":"ggswim early stages, active development! Expect see many changes near future API documentation. can install development version ggswim like :","code":"devtools::install_github(\"CHOP-CGTInformatics/ggswim\")"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Create swimmer plots with - ggswim","text":"ggswim provides developers set commands make easy create beautiful swimmer plots using architecture may already familiar ggplot2. main functions power ggswim wrapped around core ggplot2 functions, leveraging ability add layers whim whatever developer’s display requires. ggswim package reduces complexity behind making reproducible legend displays correctly show points interest key telling story swimmer plot. Let’s show quick example works !","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"a-sample-data-set","dir":"","previous_headings":"","what":"A Sample Data Set","title":"Create swimmer plots with - ggswim","text":"ggswim comes packaged sample dataset called patient_status, list containing 3 tibbles: patient_status adverse_events medication_administration present, little bit data manipulation required get patient_status typically expected structure one ready swimming: Now data preparation way, ’re ready swim!","code":"library(ggswim) library(ggplot2)  patient_data <- ggswim::patient_data  patient_status <- patient_data$patient_status adverse_events <- patient_data$adverse_events medication_administration <- patient_data$medication_administration  patient_status <- patient_status |>   tidyr::pivot_longer(c(time_start, time_end)) |>   dplyr::mutate(.by = subject_id,                 time_sorting = sum(value)) |>    dplyr::arrange(cohort, time_sorting) |>   dplyr::mutate(subject_id = factor(subject_id, levels = unique(subject_id))) ggswim(data = patient_status,          mapping = aes(x = value,                        y = subject_id,                        fill = cohort)) +   add_marker(data = adverse_events,              mapping = aes(x = time_of_event,                            y = subject_id,                            color = adverse_event_name,                            shape = adverse_event_name),              size = 5) +   add_marker(data = medication_administration,              mapping = aes(x = time_of_event,                            y = subject_id,                            label = medication,                            color = name),              label.size = NA, fill = NA, size = 5) +   ggplot2::labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggplot2::ggtitle(\"My Swim Plot\") +   ggplot2::theme_minimal() +   ggplot2::scale_color_manual(     name = \"Markers\",     values = c(\"firebrick\", \"forestgreen\", NA, NA, \"purple\")   ) +   ggplot2::scale_shape_manual(     name = \"Markers\",     values = c(19, 13, 9)   ) +   ggplot2::scale_fill_manual(     name = \"Lanes\",     values = c(\"steelblue1\", \"goldenrod1\")   )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"future-plans","dir":"","previous_headings":"A Sample Data Set","what":"Future Plans","title":"Create swimmer plots with - ggswim","text":"lot work ggswim! Future plans include: full test suite Better checks ggswim-compatible data structures Additional vignettes improved documentation","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"Provide description PR","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed Changes","title":"Description","text":"List changes bullet format: Change 1 Change 2 Change 3 Screenshots applicable, add screenshots help explain proposed changes","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"issue-addressed","dir":"","previous_headings":"","what":"Issue Addressed","title":"Description","text":"Closes #[provide issue number link ]","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"Description","text":"submitting PR, please check verify submission meets criteria: New/revised functions associated tests New/revised functions update downstream outputs associated static testing files (.RDS) updated inst/testdata/create_test_data.R New/revised functions use appropriate naming conventions New/revised functions don’t repeat code Code changes less 250 lines total Issues linked PR using GitHub’s list keywords appropriate reviewer assigned PR appropriate developers assigned PR Pre-release package version incremented using usethis::use_version()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review","dir":"","previous_headings":"","what":"Code Review","title":"Description","text":"section used reviewer developers Code Review PR submission","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review-checklist","dir":"","previous_headings":"","what":"Code Review Checklist","title":"Description","text":"checked new files follow naming conventions right place checked documentation complete, clear, without typos added/edited comments explain “” “” checked new variable function names follow naming conventions checked new tests written key business logic /bugs PR fixes checked new tests address important edge cases","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add markers of interest to level response trajectories — add_marker","title":"Add markers of interest to level response trajectories — add_marker","text":"\"Markers\" used specify events interest along response trajectories across individual lanes.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add markers of interest to level response trajectories — add_marker","text":"","code":"add_marker(data = NULL, mapping = aes(), ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add markers of interest to level response trajectories — add_marker","text":"data dataframe prepared use ggswim(), either coming parent ggswim() function, another add_marker() call, new dataframe prepared use ggswim(). mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. ... arguments passed add_marker(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add markers of interest to level response trajectories — add_marker","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add markers of interest to level response trajectories — add_marker","text":"add_marker() understands following aesthetics (required aesthetics bold) using color/colour akin geom_point() x y color/colour alpha group shape size stroke add_marker() understands following aesthetics (required aesthetics bold) using label akin geom_label(). See \"Notes\" additional considerations requirements. x y color/colour label * name ** alpha angle family fontface group hjust lineheight size vjust Notes: add_marker() support mapping using fill. *using label, secondary color reference required make label appear color layer legend. **using dynamic color call, specifying name required aesthetic mapping render legend correctly.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind layer dataframes for legend — bind_layer_data","title":"Bind layer dataframes for legend — bind_layer_data","text":"Internal helper function returns layer data get_layer_data() bound dataframe help legend guide definitions.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind layer dataframes for legend — bind_layer_data","text":"","code":"bind_layer_data(ggswim_obj, layer_indices, layer_data, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind layer dataframes for legend — bind_layer_data","text":"ggswim_obj description layer_indices description layer_data description static_colours description","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind layer dataframes for legend — bind_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ggswim fixes and display updates — build_ggswim","title":"Apply ggswim fixes and display updates — build_ggswim","text":"function seeks correct output manual overrides introduced add_marker() depending combination layer types user provides. run automatically background print method via print.ggswim_obj().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim_obj ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply ggswim fixes and display updates — build_ggswim","text":"current state, build_ggswim() can work pre-rendered ggswim plot object, therefore added + operator chain. build_ggswim() makes use ggplot2::guides() dynamically override displays layers ggswim legend. also applies call ggplot2::scale_color_manual() applicable cases user calls static color/colour argument addition required color mapping aesthetic (handled arg: name).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_markers for label and color arguments — check_marker_label_aes","title":"check add_markers for label and color arguments — check_marker_label_aes","text":"required, legend display label icons users supply color colour aes() along label. Since break app, warning thrown.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_markers for label and color arguments — check_marker_label_aes","text":"","code":"check_marker_label_aes(mapping)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_markers for label and color arguments — check_marker_label_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported mapping args — check_supported_mapping_aes","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"ggswim() add_marker() support aesthetic mappings wrapped functions . design, helps build_ggswim() work appropriately.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"","code":"check_supported_mapping_aes(mapping, unsupported_aes, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. unsupported_aes character vector parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an argument with checkmate — checkmate","title":"Check an argument with checkmate — checkmate","text":"Check argument checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an argument with checkmate — checkmate","text":"","code":"check_arg_is_character(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_dataframe(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_integerish(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_list(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_logical(x, ..., arg = caller_arg(x), call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an argument with checkmate — checkmate","text":"x object check ... additional arguments passed checkmate arg name argument include error message. Captured rlang::caller_arg() default call calling environment use error message req_cols required fields check_arg_is_supertbl()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an argument with checkmate — checkmate","text":"TRUE x passes checkmate check. error otherwise name checkmate function class","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for missing data — drop_missing_override_data","title":"Check for missing data — drop_missing_override_data","text":"Internal checking function responsible alerting user missing data present colour aesthetic layer. ggswim allow automatically correct dropping missing data.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for missing data — drop_missing_override_data","text":"","code":"drop_missing_override_data(override)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for missing data — drop_missing_override_data","text":"override override list object, responsible powering guides()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for missing data — drop_missing_override_data","text":"override list object, responsible powering guides(). Corrected missing data exists.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value for error message — format_error_val","title":"Format value for error message — format_error_val","text":"Format value error message","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value for error message — format_error_val","text":"","code":"format_error_val(x)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value for error message — format_error_val","text":"x value format","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value for error message — format_error_val","text":"x atomic, x cli formatting truncate 5 values. Otherwise, string summarizing x produced as_label","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Layer Data — get_layer_data","title":"Build Layer Data — get_layer_data","text":"internal function looks color fill aesthetic mapping data constructed ggplot objects appends layer data associated data parent data frame.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Layer Data — get_layer_data","text":"","code":"get_layer_data(data, mapping, i = 1L, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Layer Data — get_layer_data","text":"data data responsible current layer mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. integer supply layer retrieve. none given, defaults 1L. static_colours inherited dataframe add_marker captures defines static color indices","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Layer Data — get_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Create swimmer plots using ggplot2 framework.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Maintainer: Richard Hanna richardshanna91@gmail.com Authors: Stephan Kadauke kadaukes@chop.edu Ezra Porter ezrajporter@gmail.com","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual level response trajectories — ggswim","title":"Plot individual level response trajectories — ggswim","text":"Visualize individual record response trajectories time using swimmer plot.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual level response trajectories — ggswim","text":"","code":"ggswim(data, mapping = aes(), ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual level response trajectories — ggswim","text":"data dataframe prepared use ggswim() mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. ... arguments passed ggswim(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot individual level response trajectories — ggswim","text":"swimmer plot data visualization used display individual subject data time. shows events outcomes points along horizontal line subject, allowing easy comparison pattern identification.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot individual level response trajectories — ggswim","text":"ggswim() understands following aesthetics (required aesthetics bold): x y alpha fill group linetype linewidth Note: ggswim() support mapping using color/colour.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ggswim object — grid.draw.ggswim_obj","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"Draw ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"# S3 method for ggswim_obj grid.draw(x, recording = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"x object class 'ggswim_obj' recording logical value indicate whether drawing     operation recorded Grid display list.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"None","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"# TODO: add example"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Patient data — patient_data","title":"Patient data — patient_data","text":"sample list dataset containing patient status, adverse event, medication distribution information. Suitable ggswim() display.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patient data — patient_data","text":"","code":"patient_data"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Patient data — patient_data","text":"list following tibbles: patient_status 5 column tibble patient IDs, cohorts, status, start end times adverse_events 4 column tibble patient IDs, AE names, time event medication administration 5 column tibble patient IDs, labels medications, names medications, time event","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Patient data — patient_data","text":"","code":"patient_data #> $patient_status #> # A tibble: 15 × 5 #>    subject_id cohort   status    time_start time_end #>    <fct>      <fct>    <ord>          <dbl>    <dbl> #>  1 1          Cohort A On Study        0        2.32 #>  2 1          Cohort A Off Study       2.32    19.7  #>  3 2          Cohort A On Study        0        8.16 #>  4 2          Cohort A Off Study       8.16    11.2  #>  5 3          Cohort A On Study        0        2.95 #>  6 3          Cohort A Off Study       2.95    13.9  #>  7 4          Cohort B On Study        0        4.73 #>  8 4          Cohort B Off Study       4.73    14.7  #>  9 5          Cohort A On Study        0        2.25 #> 10 5          Cohort A Off Study       2.25    13.1  #> 11 6          Cohort A On Study        0        3.39 #> 12 7          Cohort A On Study        0        8.72 #> 13 8          Cohort A On Study        0        1.41 #> 14 9          Cohort B On Study        0        4.98 #> 15 10         Cohort B On Study        0        8.19 #>  #> $adverse_events #> # A tibble: 14 × 3 #>    subject_id adverse_event_name   time_of_event #>    <fct>      <chr>                        <dbl> #>  1 1          Psychiatric Disorder         1.79  #>  2 1          Psychiatric Disorder        11.0   #>  3 1          Infection                    1.67  #>  4 1          Infection                   19.5   #>  5 2          Cardiac Disorder             3.10  #>  6 2          Cardiac Disorder            10.5   #>  7 3          Psychiatric Disorder         2.76  #>  8 3          Psychiatric Disorder         5.26  #>  9 3          Infection                    1.92  #> 10 3          Infection                    4.32  #> 11 4          Cardiac Disorder             1.26  #> 12 4          Cardiac Disorder             8.59  #> 13 7          Psychiatric Disorder         0.117 #> 14 9          Infection                    1.90  #>  #> $medication_administration #> # A tibble: 8 × 4 #>   subject_id medication name         time_of_event #>   <fct>      <chr>      <chr>                <dbl> #> 1 1          ❌         Medication B         1.54  #> 2 1          ❌         Medication B        13.2   #> 3 2          ✅         Medication A         0.504 #> 4 2          ✅         Medication A         8.79  #> 5 4          ❌         Medication B         0.835 #> 6 4          ❌         Medication B        11.6   #> 7 7          ✅         Medication A         3.35  #> 8 9          ❌         Medication B         3.83  #>"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggswim — print.ggswim_obj","title":"Print ggswim — print.ggswim_obj","text":"Print ggswim","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ggswim — print.ggswim_obj","text":"","code":"# S3 method for ggswim_obj print(x, ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggswim — print.ggswim_obj","text":"x ggswim object ... used","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ggswim — print.ggswim_obj","text":"ggplot","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggswim — print.ggswim_obj","text":"","code":"# TODO: add example"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 ggsave grid grid.draw","code":""}]
