[{"path":"https://chop-cgtinformatics.github.io/ggswim/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ggswim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/adding_arrows.html","id":"adding-arrows-using-geom_swim_arrow","dir":"Articles","previous_headings":"","what":"Adding arrows using geom_swim_arrow()","title":"Adding arrows to ggswim","text":"demonstrate might add arrows onto patient_data dataset, let’s take subset patient_data help us make use add_arrows(): look familiar, pared-dataset status column ’ll use flag lanes swimmer plot arrows. Now let’s use geom_swim_arrow() combination ggswim() make swimmer plot:","code":"library(ggswim) library(ggplot2)  arrow_data <- patient_data |>   dplyr::left_join(     end_study_events |>       dplyr::select(pt_id, end_study_name),     by = \"pt_id\"   ) |>   dplyr::select(pt_id, end_time, end_study_name) |>   dplyr::filter(.by = pt_id, end_time == max(end_time)) |>   unique()  arrow_data |>   rmarkdown::paged_table() patient_data |>   ggplot() +   geom_swim_lane(     mapping = aes(       x = start_time, xend = end_time, y = pt_id,       color = disease_assessment     ),     linewidth = 5   ) +   geom_swim_arrow(     data = arrow_data,     mapping = aes(xend = end_time, y = pt_id),     arrow_neck_length = 5,     arrow_colour = \"slateblue\",     arrow_fill = \"cyan\"   )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/gallery.html","id":"single-row-dataset","dir":"Articles","previous_headings":"","what":"Single-Row Dataset","title":"Gallery","text":"common swimmer plot data structures may involve single-row observations record lane corresponds single status classification contains associated points interest. Let’s look example mean : dataset, combination statuses markers record single row observation. Notice markers defined points label value/name pairs. example, ’ll add two additional new scales separate marker points marker labels. Notice must still refer data single_row_data due scale splits:","code":"single_row_data <- tibble::tribble(   ~\"record\", ~\"status\", ~\"start_time\", ~\"end_time\", ~\"m1\", ~\"m1_time\", ~\"m2\", ~\"m2_time\", ~\"m2_name\",   1, \"status1\", 0, 5, \"m1\", 3, \"❌\", 5, \"Negative\",   2, \"status1\", -2, 7, \"m1\", 4, \"✅\", 6, \"Positive\",   3, \"status2\", 2, 15, \"m2\", 10, \"❌\", 15, \"Negative\" )  # Convert to factor single_row_data$record <- factor(single_row_data$record)  single_row_data |>   rmarkdown::paged_table() ggplot2::ggplot() +   geom_swim_lane(     data = single_row_data,     mapping = aes(x = start_time, xend = end_time, y = record, colour = status), linewidth = 2   ) +   scale_color_manual(name = \"Lanes\", values = c(\"firebrick\", \"steelblue\")) +   new_scale_color() +   geom_swim_point(     data = single_row_data,     mapping = aes(x = m1_time, y = record, colour = m1),     size = 5   ) +   scale_color_manual(name = \"Marker Points\", values = c(\"green\", \"orange\")) +   new_scale_color() +   geom_swim_label(     data = single_row_data,     mapping = aes(x = m2_time, y = record, label_vals = m2, label_names = m2_name),     label.size = NA, size = 5   ) +   scale_color_discrete(name = \"Marker Labels\") +   theme_minimal()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"adding-a-lane-layer","dir":"Articles","previous_headings":"","what":"Adding a Lane Layer","title":"Getting Started with ggswim","text":"Let’s get started building swimmer plot! README, using ggswim’s internal datasets: patient_data, infusion_events, end_study_events. Let’s start observing patient_data’s structure: patient_data contains long pivoted dataset patient ID’s (pt_id) can repeated. rows differentiated disease_assessmentss combined corresponding start end times, representing months. Together, rows signify patient survival timeline. CR = “Complete Response” CRi = “Complete Response Incomplete Blood Count Recovery” RD = “Relapsed Disease” Now, let’s make plot using ggplot() geom_swim_lane():  simple line graph, showing infusions grouped patients given disease assessment status. geom_swim_lane() work setting geom_segment() readying plot layers additional ggswim-specific features “markers” mentioned earlier.","code":"library(ggplot2)  p <- patient_data |>   ggplot() +   geom_swim_lane(     mapping = aes(       x = start_time,       xend = end_time,       y = pt_id,       color = disease_assessment     ),     linewidth = 5   )  p"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"adding-a-marker-layer-points","dir":"Articles","previous_headings":"","what":"Adding a Marker Layer: Points","title":"Getting Started with ggswim","text":"Let’s add marker layer next infusion_events dataset: dataset much simpler, 3 columns indicating time initial infusion, 0 initial infusion reinfusions point beyond 0 (patient ). also categorized infusion_type. order separate layers identical types, case colors, need way separate legend lanes markers. default, ggplot2 group together, using new_scale_color() ggnewscale package can specify want actually keep scales. new_scale_color() can used make number separations need, just sure call separation top marker call include additional scale changes moving next one. new_scale_color() establishes start new scale, important define scale changes want calling moving next one. common workflow use scale_color_manual(), scale_color_brewer(), scale_color_discrete(), etc., change update colors names visible elements plot legend, ’ll apply , just swim lane layer moving adding markers.  Now can see shapes added establish markers infusions.","code":"infusion_events |>   rmarkdown::paged_table() p <- p +   scale_color_manual(     name = \"Overall Disease Assessment\",     values = c(\"#6394F3\", \"#F3C363\", \"#EB792F\", \"#d73a76\", \"#85a31e\")   ) +   new_scale_color() +   geom_swim_point(     data = infusion_events,     aes(       x = time_from_initial_infusion,       y = pt_id,       color = infusion_type,     ),     size = 5   )  p"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"adding-a-marker-layer-labels","dir":"Articles","previous_headings":"","what":"Adding a Marker Layer: Labels","title":"Getting Started with ggswim","text":"last dataset involves end study events, .e. events indicate patient left study various reasons. ’ll notice dataset includes use emojis end_study_label. addition shapes symbols, ggswim supports use emojis rendering swimmer plots. geom_swim_label() allows users specify shapes emojis using appropriate aes() argument callouts: label_vals label_names. unique mapping parameters ggswim, letting support geom_label() handling manipulation scales layers. Let’s add layer using emojis via end_study_events dataset:  ’ve successfully made swimmer plot lanes two different kinds marker layers. Recall ggswim works within ggplot2 framework, therefore customization can done using ggplot2 theme styling functions users may already familiar . typical workflow call scale_color_manual() fix names colors plot, sure proper order use new_scale_color() mentioned earlier!","code":"end_study_events |>   rmarkdown::paged_table() p <- p +   geom_swim_label(     data = end_study_events,     aes(       x = time_from_initial_infusion,       y = pt_id,       label_vals = end_study_label,       label_names = end_study_name     ),     label.size = NA, fill = NA, size = 5   ) +   scale_color_brewer(name = \"Study Events\")  p"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"a-full-swimmer-plot","dir":"Articles","previous_headings":"","what":"A Full Swimmer Plot","title":"Getting Started with ggswim","text":"Let’s fix plot looks nicer eyes:  can also apply theme_ggswim() function:","code":"library(ggplot2)  p <- p +   theme_minimal() +   scale_color_brewer(     name = \"Study Events\"   ) +   labs(title = \"My Swimmer Plot\") +   xlab(\"Time (Months)\") + ylab(\"Patient ID\")  p p +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"additional-notes","dir":"Articles","previous_headings":"A Full Swimmer Plot","what":"Additional notes","title":"Getting Started with ggswim","text":"additional considerations keep mind working ggswim: Rendering Emojis Custom Shapes: ensure emojis custom shapes display correctly, users may need switch graphics rendering device AGG.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2024). ggswim: Create Swimmer Plots ggplot2. R package version 0.1.0,  https://github.com/CHOP-CGTInformatics/ggswim, https://chop-cgtinformatics.github.io/ggswim/.","code":"@Manual{,   title = {ggswim: Create Swimmer Plots with ggplot2},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2024},   note = {R package version 0.1.0,  https://github.com/CHOP-CGTInformatics/ggswim},   url = {https://chop-cgtinformatics.github.io/ggswim/}, }"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"ggswim-","dir":"","previous_headings":"","what":"Create swimmer plots with ggswim","title":"Create swimmer plots with ggswim","text":"ggswim package provides convenient set commands easily create swimmer plots. integrates familiar ggplot2 framework streamlines process generating legends effectively communicate events interest along individual subject trajectories. ggswim solves headaches associated layer management ggplot2 leveraging ggnewscale package presenting optimized workflow get swimmer plot.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create swimmer plots with ggswim","text":"can install development version ggswim like :","code":"devtools::install_github(\"CHOP-CGTInformatics/ggswim\")"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create swimmer plots with ggswim","text":"help get started, ggswim includes three sample datasets: patient_data, infusion_events, end_study_events. de-identified datasets simulate real world data related infusions, disease assessments, study statuses clinical trial. ggswim offers several geom-functions, using geom_swim_lane() can set horizontal survival bars swimmer plot, .e. “lanes”. ’ll also set corresponding arrows indicate subjects still trial:  Next ’ll add events interest: end study updates, infusions. ’ll refer “markers” call two geom-functions: geom_swim_point() geom_swim_label().  Finally, ’ll beautify plot familiar ggplot2 techniques last finishing touch theme_ggswim():","code":"library(ggswim) library(ggplot2)  p <- patient_data |>   ggplot() +   geom_swim_lane(     mapping = aes(       x = start_time, y = pt_id, xend = end_time,       color = disease_assessment     )   ) +   geom_swim_arrow(     data = arrow_data,     mapping = aes(xend = end_time, y = pt_id)   ) +   scale_color_brewer(     name = \"Overall Disease Assessment\",     palette = \"Set1\"   )  p p <- p +   new_scale_color() +   geom_swim_point(     data = infusion_events,     aes(x = time_from_initial_infusion, y = pt_id, color = infusion_type),     size = 5   ) +   geom_swim_label(     data = end_study_events,     aes(x = time_from_initial_infusion, y = pt_id, label_vals = end_study_label, label_names = end_study_name),     label.size = NA, fill = NA, size = 5   )  p p +   scale_color_brewer(name = \"Markers\", palette = \"Set2\") +   labs(title = \"My Swimmer Plot\") +   xlab(\"Time Since Infusion (Months)\") + ylab(\"Patient ID\") +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"collaboration","dir":"","previous_headings":"","what":"Collaboration","title":"Create swimmer plots with ggswim","text":"invite give feedback collaborate us! familiar GitHub R packages, please feel free submit pull request. Please let us know ggswim fails whatever reason database submit bug report creating GitHub issue. Please note project released Contributor Code Conduct. participating agree abide terms.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ggswim fixes and display updates — build_ggswim","title":"Apply ggswim fixes and display updates — build_ggswim","text":"Users generally never call function, used invoke final changes plot rendering custom print method via print.ggswim_obj().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim_obj ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggplot2 object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply ggswim fixes and display updates — build_ggswim","text":"current state, build_ggswim() can work pre-rendered ggswim plot object, therefore added + operator chain.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"ggswim_obj <- ggplot2::ggplot(data = patient_data) +   geom_swim_lane(     mapping = aes(       x = start_time,       y = pt_id,       xend = end_time,       color = disease_assessment     )   ) build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":null,"dir":"Reference","previous_headings":"","what":"check geom_swim_arrow for arrow_fill and arrow_type arguments — check_arrow_fill_type","title":"check geom_swim_arrow for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"Supply users warning arrow_type \"closed\" arrow_fill argument specified. error occur, nothing indicate issue output.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check geom_swim_arrow for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"","code":"check_arrow_fill_type(arrow_type, arrow_fill)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check geom_swim_arrow for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. arrow_fill fill color arrow head","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":null,"dir":"Reference","previous_headings":"","what":"check geom_swim_arrow for arrow_neck_length argument — check_arrow_neck_length","title":"check geom_swim_arrow for arrow_neck_length argument — check_arrow_neck_length","text":"Supply users error arrow_neck_length integer, symbolic column parent dataset, default (NULL).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check geom_swim_arrow for arrow_neck_length argument — check_arrow_neck_length","text":"","code":"check_arrow_neck_length(arrow_neck_length)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check geom_swim_arrow for arrow_neck_length argument — check_arrow_neck_length","text":"arrow_neck_length Value specifying neck length end segment arrow head base","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":null,"dir":"Reference","previous_headings":"","what":"check for coerced data inside a ggswim function — check_coerced_data","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"Supply users error coercion data elements occurs inside ggswim() add_marker() rectified retrieve_original_aes().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"","code":"check_coerced_data(expr)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"expr character vector test existence names dataset","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"ggswim references internal ggplot layers aesthetic mapping required downstream rendering. user applies coercion function, ggswim may able parse original variable. example, ggswim(mtcars, aes(x = hp, y = cyl, color = factor(disp)), rlang::get_expr() see color mapping aesthetic factor(disp), disp.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"check build_ggswim receives a ggswim class object — check_ggswim_obj","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"Supply users error build_ggswim() used outside context ggswim_obj class object.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"","code":"check_ggswim_obj(obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"obj ggplot object passed ggswim print method. Ideally, always enforced ggswim_obj class type ggswim used.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_markers for label arguments — check_marker_label_aes","title":"check add_markers for label arguments — check_marker_label_aes","text":"proper display label values legend, color/colour mapping value along name specifier typically needed. mandatory supply naming parameter, warning displayed labels used naming param detected. error thrown label naming parameter specified, label value parameter included. Default ggplot2 behavior allow throw warning, instead wish error.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_markers for label arguments — check_marker_label_aes","text":"","code":"check_marker_label_aes(mapping)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_markers for label arguments — check_marker_label_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_aes_params.html","id":null,"dir":"Reference","previous_headings":"","what":"check for missing aes mappingparams — check_missing_aes_params","title":"check for missing aes mappingparams — check_missing_aes_params","text":"Utility check block users submitting functions missing key parameters.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_aes_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for missing aes mappingparams — check_missing_aes_params","text":"","code":"check_missing_aes_params(mapping, params, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_aes_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for missing aes mappingparams — check_missing_aes_params","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. params vector params check string format parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_aes_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check for missing aes mappingparams — check_missing_aes_params","text":"key use check stopgap missing x y aes parameters valid currently work setup.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":null,"dir":"Reference","previous_headings":"","what":"check for missing params — check_missing_params","title":"check for missing params — check_missing_params","text":"Utility check block users submitting functions missing key parameters. Tests single parameter NULL.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for missing params — check_missing_params","text":"","code":"check_missing_params(param, name, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for missing params — check_missing_params","text":"param parameter check NULL name name parameter checked parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported mapping args — check_supported_mapping_aes","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"ggswim() add_marker() support aesthetic mappings wrapped functions . design, helps build_ggswim() work appropriately.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"","code":"check_supported_mapping_aes(mapping, unsupported_aes, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. unsupported_aes character vector parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported position args — check_supported_position_args","title":"check for unsupported position args — check_supported_position_args","text":"ggswim() accepts position argument identity . Others dodge jitter supported.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported position args — check_supported_position_args","text":"","code":"check_supported_position_args(position, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported position args — check_supported_position_args","text":"position Position adjustment. ggswim accepts \"identity\".  Default \"identity\". parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an argument with checkmate — checkmate","title":"Check an argument with checkmate — checkmate","text":"Check argument checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an argument with checkmate — checkmate","text":"","code":"check_arg_is_character(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_dataframe(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_integerish(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_list(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_logical(x, ..., arg = caller_arg(x), call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an argument with checkmate — checkmate","text":"x object check ... additional arguments passed checkmate arg name argument include error message. Captured rlang::caller_arg() default call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an argument with checkmate — checkmate","text":"TRUE x passes checkmate check. error otherwise name checkmate function class","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":null,"dir":"Reference","previous_headings":"","what":"End of Study Events dataset — end_study_events","title":"End of Study Events dataset — end_study_events","text":"datasets provide information patients, infusion events, end study events. Trial data de-identified randomized general use.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End of Study Events dataset — end_study_events","text":"","code":"data(end_study_events)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"End of Study Events dataset — end_study_events","text":"object class tbl_df (inherits tbl, data.frame) 6 rows 4 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"End of Study Events dataset — end_study_events","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End of Study Events dataset — end_study_events","text":"end_study_events contains pre-formatted time series data related end study events patients left trial varying reasons. dataset contains emojis label use applicable add_marker().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End of Study Events dataset — end_study_events","text":"","code":"end_study_events #> # A tibble: 6 × 4 #>   pt_id time_from_initial_infusion end_study_label end_study_name            #>   <chr>                      <dbl> <chr>           <chr>                     #> 1 01                           2   ⚠️               Other End Study Reason    #> 2 02                           0.2 ❌              Deceased                  #> 3 03                          11.9 ✅              Completed Study Follow-Up #> 4 06                           4.8 ⚠️               Other End Study Reason    #> 5 08                          11.7 ⚠️               Other End Study Reason    #> 6 12                           9.7 ⚠️               Other End Study Reason"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value for error message — format_error_val","title":"Format value for error message — format_error_val","text":"Format value error message","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value for error message — format_error_val","text":"","code":"format_error_val(x)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value for error message — format_error_val","text":"x value format","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value for error message — format_error_val","text":"x atomic, x cli formatting truncate 5 values. Otherwise, string summarizing x produced as_label","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Add arrows to swimmer plot lanes — geom_swim_arrow","title":"Add arrows to swimmer plot lanes — geom_swim_arrow","text":"Arrows attached end swimmer plot lanes can used denote continuation events ongoing treatment, implying activity status extends beyond plotted period.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add arrows to swimmer plot lanes — geom_swim_arrow","text":"","code":"geom_swim_arrow(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow_colour = \"black\",   arrow_head_length = unit(0.25, \"inches\"),   arrow_neck_length = NULL,   arrow_fill = NULL,   arrow_type = \"closed\",   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add arrows to swimmer plot lanes — geom_swim_arrow","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data dataframe prepared use geom_swim_arrow() stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. arrow_colour color arrow head arrow_head_length unit specifying length arrow head (tip base). arrow_neck_length Value specifying neck length end segment arrow head base arrow_fill fill color arrow head arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_arrow.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add arrows to swimmer plot lanes — geom_swim_arrow","text":"geom_swim_arrow() understands following aesthetics (required aesthetics bold): x y xend alpha colour group linetype linewidth geom_swim_arrow() wrapper geom_segment() can support much functionality.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add arrows to swimmer plot lanes — geom_swim_arrow","text":"","code":"# Set up data for arrows arrow_data <- patient_data |>   dplyr::left_join(     end_study_events |>       dplyr::select(pt_id, end_study_name),     by = \"pt_id\"   ) |>   dplyr::select(pt_id, end_time, end_study_name) |>   dplyr::filter(.by = pt_id, end_time == max(end_time)) |>   unique()  geom_swim_arrow(   data = arrow_data,   mapping = aes(xend = end_time, y = pt_id),   linewidth = .1,   arrow_neck_length = 5,   arrow_head_length = grid::unit(0.25, \"inches\"),   arrow_colour = \"slateblue\",   arrow_fill = \"cyan\" ) #> mapping y = ~pt_id, xend = ~end_time  #> geom_swim_arrow: na.rm = FALSE, lineend = butt, linejoin = round, arrow = NULL, arrow.fill = cyan, linewidth = 0.1  #> stat_identity: na.rm = FALSE  #> position_identity"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Add label markers to swimmer plots — geom_swim_label","title":"Add label markers to swimmer plots — geom_swim_label","text":"Markers specific symbols indicators placed lanes swimmer plot denote particular events, milestones, statuses. provide additional contextual information significant occurrences timeline, treatment responses adverse events.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add label markers to swimmer plots — geom_swim_label","text":"","code":"geom_swim_label(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   parse = FALSE,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   label.size = 0.25,   size.unit = \"mm\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add label markers to swimmer plots — geom_swim_label","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. jointy specified nudge_x nudge_y. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). string nameing position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. parse TRUE, labels parsed expressions displayed described ?plotmath. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. label.size Size label border, mm. size.unit size aesthetic interpreted: millimetres (\"mm\", default), points (\"pt\"), centimetres (\"cm\"), inches (\"\"), picas (\"pc\"). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_label.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add label markers to swimmer plots — geom_swim_label","text":"geom_swim_label() understands following aesthetics (required aesthetics bold) using label_vals/label_names similar geom_label(). See \"Notes\" additional considerations requirements. x y label_vals label_names * alpha angle family fontface group hjust lineheight size vjust","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_label.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Add label markers to swimmer plots — geom_swim_label","text":"using labels, label_vals label_names required proper legend population. minimum, label_vals needed data display. unique parameter options aes() ggswim.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add label markers to swimmer plots — geom_swim_label","text":"","code":"if (FALSE) { ggplot2::ggplot() +   geom_swim_label(     data = end_study_events,     mapping = aes(       x = time_from_initial_infusion, y = pt_id,       label_vals = end_study_label, label_names = end_study_name     ),     size = 5, label.size = NA   ) }"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_lane.html","id":null,"dir":"Reference","previous_headings":"","what":"Add lanes to swimmer plots — GeomSwimArrow","title":"Add lanes to swimmer plots — GeomSwimArrow","text":"Lanes swimmer plots represent individual subjects entities tracked time. lane horizontal track displays duration sequence events activities corresponding subject.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_lane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add lanes to swimmer plots — GeomSwimArrow","text":"","code":"geom_swim_lane(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_lane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add lanes to swimmer plots — GeomSwimArrow","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data dataframe prepared use geom_swim_lane() stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_lane.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add lanes to swimmer plots — GeomSwimArrow","text":"geom_swim_lane() understands following aesthetics (required aesthetics bold): x y xend yend alpha colour group linetype linewidth geom_swim_lane() wrapper geom_segment() can support much functionality. Notes: geom_swim_lane() support mapping using fill.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_lane.html","id":"arrows","dir":"Reference","previous_headings":"","what":"Arrows","title":"Add lanes to swimmer plots — GeomSwimArrow","text":"Arrows can added ends swimmer plot lanes specified geom_swim_arrow().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_lane.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add lanes to swimmer plots — GeomSwimArrow","text":"","code":"patient_data |>   ggplot2::ggplot() +   geom_swim_lane(mapping = aes(     x = start_time, y = pt_id, xend = end_time,     color = disease_assessment   ))"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Add point markers to swimmer plots — geom_swim_point","title":"Add point markers to swimmer plots — geom_swim_point","text":"Markers specific symbols indicators placed lanes swimmer plot denote particular events, milestones, statuses. provide additional contextual information significant occurrences timeline, treatment responses adverse events.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add point markers to swimmer plots — geom_swim_point","text":"","code":"geom_swim_point(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add point markers to swimmer plots — geom_swim_point","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_point.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add point markers to swimmer plots — geom_swim_point","text":"geom_swim_point() understands following aesthetics (required aesthetics bold): x y alpha colour group shape size stroke geom_swim_point() wrapper geom_point() can support much functionality. Notes: geom_swim_point() support mapping using fill.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/geom_swim_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add point markers to swimmer plots — geom_swim_point","text":"","code":"infusion_events |>   ggplot2::ggplot() +   geom_swim_point(     mapping = aes(       x = time_from_initial_infusion, y = pt_id,       color = infusion_type     ),     size = 5   )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_label_override.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix Label Legend — get_label_override","title":"Fix Label Legend — get_label_override","text":"Fixes legend labels, accounting use new_scale_colour(), labels appear legend glyphs.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_label_override.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix Label Legend — get_label_override","text":"","code":"get_label_override(plot, layer)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_label_override.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix Label Legend — get_label_override","text":"plot current plot layer new label layer added","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_label_override.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix Label Legend — get_label_override","text":"dataframe, acting key guide_legend() label aes overrides","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Create swimmer plots using ggplot2 framework.","code":""},{"path":[]},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Maintainer: Richard Hanna richardshanna91@gmail.com (ORCID) Authors: Stephan Kadauke kadaukes@chop.edu (ORCID) Ezra Porter ezrajporter@gmail.com (ORCID)","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ggswim object — grid.draw.ggswim_obj","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"grid::grid.draw() methods objects classes 'ggswim_obj' 'ggcuminc'. implemented allow users directly call ggplot2::ggsave() 'ggswim' figures.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"# S3 method for ggswim_obj grid.draw(x, recording = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"x object class 'ggswim_obj' recording logical value indicate whether drawing     operation recorded Grid display list.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"None","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"p <- ggplot2::ggplot(data = patient_data) +   geom_swim_lane(     mapping = aes(       x = start_time,       y = pt_id,       xend = end_time,       color = disease_assessment     )   ) grid.draw(p)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Infusion Events dataset — infusion_events","title":"Infusion Events dataset — infusion_events","text":"datasets provide information patients, infusion events, end study events. Trial data de-identified randomized general use.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infusion Events dataset — infusion_events","text":"","code":"data(infusion_events)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Infusion Events dataset — infusion_events","text":"object class tbl_df (inherits tbl, data.frame) 16 rows 3 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infusion Events dataset — infusion_events","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infusion Events dataset — infusion_events","text":"infusion_events contains pre-formatted time series data related infusions reinfusions patients patient_data. dataset applicable use add_marker().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infusion Events dataset — infusion_events","text":"","code":"infusion_events #> # A tibble: 16 × 3 #>    pt_id time_from_initial_infusion infusion_type    #>    <chr>                      <dbl> <chr>            #>  1 01                           0   Initial Infusion #>  2 02                           0   Initial Infusion #>  3 03                           0   Initial Infusion #>  4 03                           3   Reinfusion       #>  5 04                           0   Initial Infusion #>  6 05                           0   Initial Infusion #>  7 05                           4.3 Reinfusion       #>  8 06                           0   Initial Infusion #>  9 08                           0   Initial Infusion #> 10 08                           2.5 Reinfusion       #> 11 09                           0   Initial Infusion #> 12 12                           0   Initial Infusion #> 13 13                           0   Initial Infusion #> 14 17                           0   Initial Infusion #> 15 18                           0   Initial Infusion #> 16 19                           0   Initial Infusion"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Patient Data dataset — patient_data","title":"Patient Data dataset — patient_data","text":"datasets provide information patients, infusion events, end study events. Trial data de-identified randomized general use.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patient Data dataset — patient_data","text":"","code":"data(patient_data)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Patient Data dataset — patient_data","text":"object class tbl_df (inherits tbl, data.frame) 53 rows 4 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Patient Data dataset — patient_data","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Patient Data dataset — patient_data","text":"patient_data contains pre-formatted time series data related disease status markers status markers can support arrows. dataset applicable use ggswim() add_marker().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Patient Data dataset — patient_data","text":"","code":"patient_data #> # A tibble: 53 × 4 #>    pt_id disease_assessment       start_time end_time #>    <chr> <chr>                         <dbl>    <dbl> #>  1 01    CR/CRi + B Cell Recovery       -2.8      0   #>  2 01    RD                              0        0.9 #>  3 01    CR/CRi + B Cell Aplasia         0.9      1.8 #>  4 01    CR/CRi + B Cell Recovery        1.8      2   #>  5 02    RD                             -2.8      0   #>  6 02    CRi                             0        0.2 #>  7 03    CR/CRi + B Cell Recovery       -2.4      0   #>  8 03    CR/CRi + B Cell Recovery        0        0.9 #>  9 03    CR/CRi + B Cell Aplasia         0.9      2.8 #> 10 03    CR/CRi + B Cell Aplasia         2.8      6.2 #> # ℹ 43 more rows"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggswim layer object — print.ggswim_layer","title":"Print ggswim layer object — print.ggswim_layer","text":"Print ggswim layer object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ggswim layer object — print.ggswim_layer","text":"","code":"# S3 method for ggswim_layer print(x, ..., flat = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggswim layer object — print.ggswim_layer","text":"x ggswim layer object ... used","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ggswim layer object — print.ggswim_layer","text":"layer object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggswim layer object — print.ggswim_layer","text":"","code":"print(   geom_swim_lane(     data = patient_data,     mapping = aes(       x = start_time,       y = pt_id,       xend = end_time,       color = disease_assessment     )   ) ) #> mapping x = ~start_time, y = ~pt_id, xend = ~end_time, colour = ~disease_assessment  #> geom_swim_lane: na.rm = FALSE, lineend = butt, linejoin = round  #> stat_identity: na.rm = FALSE  #> position_identity"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggswim object — print.ggswim_obj","title":"Print ggswim object — print.ggswim_obj","text":"Print ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ggswim object — print.ggswim_obj","text":"","code":"# S3 method for ggswim_obj print(x, ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggswim object — print.ggswim_obj","text":"x ggswim object ... used","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ggswim object — print.ggswim_obj","text":"ggplot","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggswim object — print.ggswim_obj","text":"","code":"print(   ggplot2::ggplot(data = patient_data) +     geom_swim_lane(       mapping = aes(         x = start_time,         y = pt_id,         xend = end_time,         color = disease_assessment       )     ) )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggnewscale new_scale_color, new_scale_colour ggplot2 %+%, aes, ggplot_add, ggsave grid grid.draw","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve original vars from coerced vars — retrieve_original_aes","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"Detect instances users manipulate aes() names ggswim requires access identify layer types downstream. instances coercion detected, attempt retrieve original aes() name.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"","code":"retrieve_original_aes(data, aes_mapping, aes_var)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"data data responsible current layer aes_mapping list mapping data (.e. unlist(mapping)) aes_var aesthetic variable test (ex: color, shape)","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"original variable name character string","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"ggswim references internal ggplot layers aesthetic mapping required downstream rendering. user applies coercion function, ggswim may able parse original variable. example, ggswim(mtcars, aes(x = hp, y = cyl, color = factor(disp)), rlang::get_expr() see color mapping aesthetic factor(disp), disp.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply custom theme styling for ggplot2 plots — theme_ggswim","title":"Apply custom theme styling for ggplot2 plots — theme_ggswim","text":"function applies custom styling various elements ggplot2 plots, including title, subtitle, caption, axis text, axis titles, legend text legend titles.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply custom theme styling for ggplot2 plots — theme_ggswim","text":"","code":"theme_ggswim(base_size = 12, base_family = \"\")"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply custom theme styling for ggplot2 plots — theme_ggswim","text":"base_size base font size use plot elements. Default 12. base_family base font family use plot elements. Default \"\".","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply custom theme styling for ggplot2 plots — theme_ggswim","text":"ggplot2 theme object.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply custom theme styling for ggplot2 plots — theme_ggswim","text":"function builds upon theme_minimal() function ggplot2 overrides specific theme elements provide customized look feel plots.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply custom theme styling for ggplot2 plots — theme_ggswim","text":"","code":"p <- ggplot2::ggplot(data = patient_data) +   geom_swim_lane(     mapping = aes(       x = start_time,       y = pt_id,       xend = end_time,       color = disease_assessment     )   ) +   ggplot2::scale_color_brewer(name = \"Lanes\", palette = \"Set1\") +   new_scale_color() +   geom_swim_point(     data = infusion_events,     mapping = aes(       x = time_from_initial_infusion,       y = pt_id, color = infusion_type     ), # nolint: object_usage_linter     size = 5   ) +   ggplot2::scale_color_manual(name = \"Markers\", values = c(\"red\", \"green\"))  p +   theme_ggswim()"}]
