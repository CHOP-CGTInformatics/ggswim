[{"path":"https://chop-cgtinformatics.github.io/ggswim/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ggswim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"building-swimmer-plots-with-aesthetic-mapping","dir":"Articles","previous_headings":"","what":"Building swimmer plots with aesthetic mapping","title":"Getting Started with ggswim","text":"start, let’s build swimmer plot using aes() dynamically mapped data (static mapping, see Static Mapping Markers). README, using ggswim’s internal datasets: patient_data, infusion_events, end_study_events. Let’s start observing patient_data’s structure: patient_data contains long pivoted dataset patient ID’s (pt_id) can repeated. rows differentiated event_markers combined corresponding times delta_t0 change time (days) infusion. Together, rows signify patient timeline consideration infusions, disease assessments, B-cell status changes. ’ll notice several columns give information: bcell_status: b-cell status given patient particular time point, indicating aplasia recovery CR = “Complete Response” CRi = “Complete Response Incomplete Blood Count Recovery” RD = “Relapsed Disease” Now, let’s make plot using ggswim() first add_marker() call:  simple bar chart, showing infusions grouped patients given disease assessment status. ggswim() work setting geom_col() readying plot layers additional ggswim-specific features “markers” mentioned earlier. Let’s add marker layer next reference bcell_status patient_data dataset. ’ll also add another marker layer infusion_events dataset: dataset much simpler, 4 columns indicating infusions (considered t0) reinfusions point beyond t0 (patient ).  Now can see shapes added establish markers… though blend colors bar charts. ’ll fix soon enough! now, can see new legend added display markers b-cell disease assessment infusion events. last dataset involves end study events, .e. events indicate patient left study various reasons. ’ll notice dataset includes use emojis end_study_label. addition shapes symbols, ggswim supports use emojis rendering swimmer plots. add_marker() allows users specify shapes emojis using appropriate aes() argument callouts: label_vals label_names. unique mapping parameters ggswim. Let’s add layer using emojis via end_study_events dataset:  ’ve successfully made swimmer plot lanes three different kinds marker layers. Recall ggswim works within ggplot2 framework, therefore customization can done using ggplot2 theme styling functions users may already familiar . Let’s fix plot looks nicer eyes:  can also supply theme_ggswim() function:","code":"p <- ggswim(   patient_data |> dplyr::rename(\"Status Markers\" = bcell_status),   mapping = aes(     x = delta_t0_months,     y = pt_id, fill =       disease_assessment_status   ) )  p infusion_events |>   rmarkdown::paged_table() p <- p +   add_marker(     aes(       x = delta_t0_months,       y = pt_id,       color = `Status Markers`,       shape = `Status Markers`     ),     size = 5, position = \"identity\", alpha = 1   ) +   add_marker(     data = infusion_events,     aes(       x = infusion_delta_t0_months,       y = pt_id,       color = infusion_type,       shape = infusion_type     ),     size = 5, position = \"identity\", alpha = 1   )  p end_study_events |>   rmarkdown::paged_table() p <- p +   add_marker(     data = end_study_events,     aes(       x = delta_t0_months,       y = pt_id,       label_vals = end_study_label,       label_names = end_study_name     ),     label.size = NA, fill = NA, size = 5   )  p library(ggplot2)  p <- p +   theme_minimal() +   scale_colour_manual(     values = c(\"firebrick\", \"#F5EB0A\", \"gray50\", \"#25DA6D\", \"#25DA6D\", NA, NA, NA)   ) +   scale_shape_manual(     values = c(19, 19, 15, 17, 18)   ) +   scale_fill_manual(     name = \"Overall Disease Assessment\",     values = c(\"#6394F3\", \"#F3C363\", \"#EB792F\")   ) +   labs(title = \"My Swimmer Plot\") +   xlab(\"Time (Months)\") + ylab(\"Patient ID\")  p p +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"additional-notes","dir":"Articles","previous_headings":"","what":"Additional notes","title":"Getting Started with ggswim","text":"additional considerations keep mind working ggswim: Handling Missing Data: ggswim support missing data mapping aesthetics. detected, developers receive warning, missing data may appear NA values display, excluded legend. Color Mapping ggswim(): Please note ggswim() support mapping using colour argument. Filling Markers add_marker(): Similarly, add_marker() support mapping using fill argument. Rendering Emojis Custom Shapes: ensure emojis custom shapes display correctly, users may need switch graphics rendering device AGG.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2024). ggswim: Create Swimmer Plots ggplot2. R package version 0.1.0,  https://github.com/CHOP-CGTInformatics/ggswim, https://chop-cgtinformatics.github.io/ggswim/.","code":"@Manual{,   title = {ggswim: Create Swimmer Plots with ggplot2},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2024},   note = {R package version 0.1.0,  https://github.com/CHOP-CGTInformatics/ggswim},   url = {https://chop-cgtinformatics.github.io/ggswim/}, }"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"ggswim-","dir":"","previous_headings":"","what":"Create swimmer plots with - ggswim","title":"Create swimmer plots with - ggswim","text":"ggswim package provides convenient set commands easily create swimmer plots. integrates familiar ggplot2 framework streamlines process generating legends effectively communicate events interest along individual subject trajectories.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create swimmer plots with - ggswim","text":"can install development version ggswim like :","code":"devtools::install_github(\"CHOP-CGTInformatics/ggswim\")"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create swimmer plots with - ggswim","text":"help get started, ggswim includes three sample datasets: patient_data, infusion_events, end_study_events. de-identified datasets simulate real world data related infusions, disease assessments, study statuses clinical trial. first calling ggswim() function, can set horizontal survival bars swimmer plot, .e. “lanes:” Next ’ll add events interest: B-cell status changes, end study updates, infusions. ’ll refer “markers”: Finally, ’ll beautify plot familiar ggplot2 techniques last finishing touch theme_ggswim():","code":"library(ggswim) library(ggplot2)  p <- ggswim(   patient_data |> dplyr::rename(\"Status Markers\" = bcell_status),   mapping = aes(x = delta_t0_months, y = pt_id, fill = disease_assessment_status),   arrow = arrow_status,   arrow_head_length = unit(.25, \"inches\"),   arrow_neck_length = delta_today,   width = 0.25 ) p <- p +   add_marker(     aes(x = delta_t0_months, y = pt_id, color = `Status Markers`, shape = `Status Markers`),     size = 5, position = \"identity\", alpha = 1   ) +   add_marker(     data = end_study_events,     aes(x = delta_t0_months, y = pt_id, label_vals = end_study_label, label_names = end_study_name),     label.size = NA, fill = NA, size = 5   ) +   add_marker(     data = infusion_events,     aes(x = infusion_delta_t0_months, y = pt_id, color = infusion_type, shape = infusion_type),     size = 5, position = \"identity\", alpha = 1   ) p +   scale_colour_manual(     values = c(\"#b22228\", \"#F5EB0A\", \"gray50\", NA, NA, NA, \"#25DA6D\", \"#25DA6D\")   ) +   scale_shape_manual(     values = c(19, 19, 15, 17, 18)   ) +   scale_fill_manual(     name = \"Overall Disease Assessment\",     values = c(\"#6394F3\", \"#F3C363\", \"#EB792F\")   ) +   labs(title = \"Sample Swimmer Plot\") +   xlab(\"Time (Months)\") + ylab(\"Patient ID\") +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"collaboration","dir":"","previous_headings":"","what":"Collaboration","title":"Create swimmer plots with - ggswim","text":"invite give feedback collaborate us! familiar GitHub R packages, please feel free submit pull request. Please let us know ggswim fails whatever reason submit bug report creating GitHub issue. Please note project released Contributor Code Conduct. participating agree abide terms.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"Provide description PR","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed Changes","title":"Description","text":"List changes bullet format: Change 1 Change 2 Change 3 Screenshots applicable, add screenshots help explain proposed changes","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"issue-addressed","dir":"","previous_headings":"","what":"Issue Addressed","title":"Description","text":"Closes #[provide issue number link ]","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"Description","text":"submitting PR, please check verify submission meets criteria: New/revised functions associated tests New/revised functions update downstream outputs associated static testing files (.RDS) updated inst/testdata/create_test_data.R New/revised functions use appropriate naming conventions New/revised functions don’t repeat code Code changes less 250 lines total Issues linked PR using GitHub’s list keywords appropriate reviewer assigned PR appropriate developers assigned PR Pre-release package version incremented using usethis::use_version()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review","dir":"","previous_headings":"","what":"Code Review","title":"Description","text":"section used reviewer developers Code Review PR submission","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review-checklist","dir":"","previous_headings":"","what":"Code Review Checklist","title":"Description","text":"checked new files follow naming conventions right place checked documentation complete, clear, without typos added/edited comments explain “” “” checked new variable function names follow naming conventions checked new tests written key business logic /bugs PR fixes checked new tests address important edge cases","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add arrows to plot using geom_segment — add_arrows","title":"Add arrows to plot using geom_segment — add_arrows","text":"helper function triggered user requests arrows appear ggswim(). uses geom_segment() function supply Adding 0-length segment end swim lanes tacking arrows using arrow argument.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add arrows to plot using geom_segment — add_arrows","text":"","code":"add_arrows(   data,   ggswim_obj,   mapping,   position,   arrow,   arrow_colour,   arrow_head_length,   arrow_neck_length,   arrow_fill,   arrow_type )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add arrows to plot using geom_segment — add_arrows","text":"data dataframe prepared use ggswim() ggswim_obj ggswim object mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". arrow column indicating swim lanes arrows applied. column must logical data type (T/F). arrow_colour Border/line color use arrow. Default \"black\". arrow_head_length unit specifying length arrow head (tip base). Must ggplot2 unit() object. Default ggplot2::unit(0.25, \"inches\"). arrow_neck_length length neck arrow end swim lane base arrow head. Either integer value column specifier. default, NULL, sets value proportional max lane value. arrow_fill Fill color/colour use arrow head (closed). Default NULL. arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. Default \"closed.\" ... arguments passed ggswim(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add markers of interest to level response trajectories — add_marker","title":"Add markers of interest to level response trajectories — add_marker","text":"\"Markers\" used specify events interest along response trajectories across individual lanes. add_marker() wraps geom_point() geom_label() depending users designation color/colour label arguments. See Aesthetics information.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add markers of interest to level response trajectories — add_marker","text":"","code":"add_marker(mapping = aes(), data = NULL, ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add markers of interest to level response trajectories — add_marker","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data dataframe prepared use ggswim(), either coming parent ggswim() function, another add_marker() call, new dataframe prepared use ggswim(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add markers of interest to level response trajectories — add_marker","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add markers of interest to level response trajectories — add_marker","text":"add_marker() understands following aesthetics (required aesthetics bold) using color/colour similar geom_point() x y color/colour name * alpha group shape size stroke add_marker() understands following aesthetics (required aesthetics bold) using label similar geom_label(). See \"Notes\" additional considerations requirements. x y label_vals label_names * alpha angle family fontface group hjust lineheight size vjust Notes: add_marker() support mapping using fill. using static/non-mapping color specifier, mapping name required aesthetic mapping render legend correctly. using labels, label_vals label_names required proper legend population. minimum, label_vals needed data display. unique parameter options aes() ggswim.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add markers of interest to level response trajectories — add_marker","text":"","code":"# markers with points and aesthetic mapping params add_marker(   data = infusion_events,   mapping = aes(     x = delta_t0,     y = pt_id,     color = infusion_type,     shape = end_study_name   ),   size = 5 ) #> mapping: x = ~delta_t0, y = ~pt_id, colour = ~infusion_type, shape = ~end_study_name  #> geom_point: na.rm = TRUE #> stat_identity: na.rm = TRUE #> position_identity   # markers with points and static params  initial_infusions <- infusion_events[infusion_events$infusion_type == \"Infusion\", ]  add_marker(   data = initial_infusions,   mapping = aes(     x = delta_t0,     y = pt_id,     name = \"Initial\"   ),   color = \"red\",   size = 5 ) #> Warning: Duplicated aesthetics after name standardisation: colour #> mapping: x = ~delta_t0, y = ~pt_id, colour = ~Initial  #> geom_point: na.rm = TRUE #> stat_identity: na.rm = TRUE #> position_identity   # markers with labels add_marker(   data = end_study_events,   mapping = aes(y = pt_id, x = delta_t0_months,       label_names = end_study_name,       label_vals = end_study_label   ),   label.size = NA, fill = NA, size = 5 ) #> mapping: x = ~delta_t0_months, y = ~pt_id, colour = ~end_study_name, label = ~end_study_label  #> geom_label: parse = FALSE, label.padding = 0.25, label.r = 0.15, label.size = NA, size.unit = mm, na.rm = FALSE #> stat_identity: na.rm = FALSE #> position_identity"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind layer dataframes for legend — bind_layer_data","title":"Bind layer dataframes for legend — bind_layer_data","text":"Internal helper function returns layer data get_layer_data() bound dataframe help legend guide definitions.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind layer dataframes for legend — bind_layer_data","text":"","code":"bind_layer_data(ggswim_obj, layer_indices, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind layer dataframes for legend — bind_layer_data","text":"ggswim_obj ggswim object layer_indices Layer indexes static_colours Dataframe static colour callouts","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind layer dataframes for legend — bind_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ggswim fixes and display updates — build_ggswim","title":"Apply ggswim fixes and display updates — build_ggswim","text":"function seeks correct output manual overrides introduced add_marker() depending combination layer types user provides. run automatically background print method via print.ggswim_obj().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim_obj ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply ggswim fixes and display updates — build_ggswim","text":"current state, build_ggswim() can work pre-rendered ggswim plot object, therefore added + operator chain. build_ggswim() makes use ggplot2::guides() dynamically override displays layers ggswim legend. also applies call ggplot2::scale_color_manual() applicable cases user calls static color/colour argument addition required color mapping aesthetic (handled arg: name).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"ggswim_obj <- ggswim(   data = patient_data,   mapping = aes(     x = delta_t0_months,     y = pt_id,     fill = disease_assessment_status   ) ) build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","title":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"Supply users warning arrow_type \"closed\" arrow_fill argument specified. error occur, nothing indicate issue output.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"","code":"check_arrow_fill_type(arrow_type, arrow_fill)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. Default \"closed.\" arrow_fill Fill color/colour use arrow head (closed). Default NULL.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","title":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","text":"Supply users error arrow_neck_length integer, symbolic column parent dataset, default (NULL).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","text":"","code":"check_arrow_neck_length(arrow_neck_length)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","text":"arrow_neck_length length neck arrow end swim lane base arrow head. Either integer value column specifier. default, NULL, sets value proportional max lane value.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":null,"dir":"Reference","previous_headings":"","what":"check for coerced data inside a ggswim function — check_coerced_data","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"Supply users error coercion data elements occurs inside ggswim() add_marker() rectified retrieve_original_aes().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"","code":"check_coerced_data(expr)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"layer_aes character vector test existence names dataset","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"ggswim references internal ggplot layers aesthetic mapping required downstream rendering. user applies coercion function, ggswim may able parse original variable. example, ggswim(mtcars, aes(x = hp, y = cyl, color = factor(disp)), rlang::get_expr() see color mapping aesthetic factor(disp), disp.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"check build_ggswim receives a ggswim class object — check_ggswim_obj","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"Supply users error build_ggswim() used outside context ggswim_obj class object.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"","code":"check_ggswim_obj(obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"obj ggplot object passed ggswim print method. Ideally, always enforced ggswim_obj class type ggswim used.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_markers for label arguments — check_marker_label_aes","title":"check add_markers for label arguments — check_marker_label_aes","text":"proper display label values legend, color/colour mapping value along name specifier typically needed. mandatory supply naming parameter, warning displayed labels used naming param detected. error thrown label naming parameter specified, label value parameter included. Default ggplot2 behavior allow throw warning, instead wish error.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_markers for label arguments — check_marker_label_aes","text":"","code":"check_marker_label_aes(mapping)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_markers for label arguments — check_marker_label_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":null,"dir":"Reference","previous_headings":"","what":"check for missing params — check_missing_params","title":"check for missing params — check_missing_params","text":"Utility check block users submitting functions missing key parameters.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for missing params — check_missing_params","text":"","code":"check_missing_params(mapping, params, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for missing params — check_missing_params","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. params vector params check string format parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_missing_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check for missing params — check_missing_params","text":"key use check stopgap missing x y aes parameters valid currently work setup.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported mapping args — check_supported_mapping_aes","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"ggswim() add_marker() support aesthetic mappings wrapped functions . design, helps build_ggswim() work appropriately.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"","code":"check_supported_mapping_aes(mapping, unsupported_aes, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. unsupported_aes character vector parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported position args — check_supported_position_args","title":"check for unsupported position args — check_supported_position_args","text":"ggswim() accepts position arguments either stack identity. Others dodge jitter supported.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported position args — check_supported_position_args","text":"","code":"check_supported_position_args(position, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported position args — check_supported_position_args","text":"position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an argument with checkmate — checkmate","title":"Check an argument with checkmate — checkmate","text":"Check argument checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an argument with checkmate — checkmate","text":"","code":"check_arg_is_character(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_dataframe(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_integerish(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_list(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_logical(x, ..., arg = caller_arg(x), call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an argument with checkmate — checkmate","text":"x object check ... additional arguments passed checkmate arg name argument include error message. Captured rlang::caller_arg() default call calling environment use error message req_cols required fields check_arg_is_supertbl()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an argument with checkmate — checkmate","text":"TRUE x passes checkmate check. error otherwise name checkmate function class","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":null,"dir":"Reference","previous_headings":"","what":"End of Study Events dataset — end_study_events","title":"End of Study Events dataset — end_study_events","text":"datasets provide information patients, infusion events, end study events. Trial data de-identified randomized general use.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End of Study Events dataset — end_study_events","text":"","code":"data(end_study_events)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"End of Study Events dataset — end_study_events","text":"object class tbl_df (inherits tbl, data.frame) 4 rows 5 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"End of Study Events dataset — end_study_events","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End of Study Events dataset — end_study_events","text":"end_study_events contains pre-formatted time series data related end study events patients left trial varying reasons. dataset contains emojis label use applicable add_marker().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/end_study_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End of Study Events dataset — end_study_events","text":"","code":"end_study_events #> # A tibble: 4 × 5 #>   pt_id delta_t0 delta_t0_months end_study_label end_study_name            #>   <chr>    <dbl>           <dbl> <chr>           <chr>                     #> 1 01          63               2 ⚠️               Other End Study Reason    #> 2 02          -1               0 ❌              Deceased                  #> 3 03         368              12 ✅              Completed Study Follow-Up #> 4 06         132               4 ⚠️               Other End Study Reason"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value for error message — format_error_val","title":"Format value for error message — format_error_val","text":"Format value error message","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value for error message — format_error_val","text":"","code":"format_error_val(x)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value for error message — format_error_val","text":"x value format","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value for error message — format_error_val","text":"x atomic, x cli formatting truncate 5 values. Otherwise, string summarizing x produced as_label","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Layer Data — get_layer_data","title":"Build Layer Data — get_layer_data","text":"internal function looks color fill aesthetic mapping data constructed ggplot objects appends layer data associated data parent data frame.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Layer Data — get_layer_data","text":"","code":"get_layer_data(data, mapping, i = 1L, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Layer Data — get_layer_data","text":"data data responsible current layer mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. integer supply layer retrieve. none given, defaults 1L. static_colours inherited dataframe add_marker captures defines static color indices","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Layer Data — get_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_overrides.html","id":null,"dir":"Reference","previous_headings":"","what":"Get overrides list for guides() — get_overrides","title":"Get overrides list for guides() — get_overrides","text":"Creates list override definitions pass guides() override.aes.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_overrides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get overrides list for guides() — get_overrides","text":"","code":"get_overrides(ref_guide, label_layer_data, point_layer_data)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_overrides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get overrides list for guides() — get_overrides","text":"ref_guide reference object get_guide_data() assist computation label_layer_data dataframe related label layer data ggswim_obj point_layer_data dataframe related point layer data ggswim_obj","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_overrides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get overrides list for guides() — get_overrides","text":"list","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_ref_layer_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Populate reference layer information list — get_ref_layer_info","title":"Populate reference layer information list — get_ref_layer_info","text":"reference layer information list used location layer type indices static color definitions.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_ref_layer_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populate reference layer information list — get_ref_layer_info","text":"","code":"get_ref_layer_info(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_ref_layer_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populate reference layer information list — get_ref_layer_info","text":"ggswim_obj ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_ref_layer_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populate reference layer information list — get_ref_layer_info","text":"list","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Create swimmer plots using ggplot2 framework.","code":""},{"path":[]},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Maintainer: Richard Hanna richardshanna91@gmail.com (ORCID) Authors: Stephan Kadauke kadaukes@chop.edu (ORCID) Ezra Porter ezrajporter@gmail.com (ORCID)","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual level response trajectories — ggswim","title":"Plot individual level response trajectories — ggswim","text":"Visualize individual record response trajectories time using swimmer plot.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual level response trajectories — ggswim","text":"","code":"ggswim(   data,   mapping = aes(),   position = \"identity\",   arrow = NULL,   arrow_colour = \"black\",   arrow_head_length = unit(0.25, \"inches\"),   arrow_neck_length = NULL,   arrow_fill = NULL,   arrow_type = \"closed\",   ... )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual level response trajectories — ggswim","text":"data dataframe prepared use ggswim() mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". arrow column indicating swim lanes arrows applied. column must logical data type (T/F). arrow_colour Border/line color use arrow. Default \"black\". arrow_head_length unit specifying length arrow head (tip base). Must ggplot2 unit() object. Default ggplot2::unit(0.25, \"inches\"). arrow_neck_length length neck arrow end swim lane base arrow head. Either integer value column specifier. default, NULL, sets value proportional max lane value. arrow_fill Fill color/colour use arrow head (closed). Default NULL. arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. Default \"closed.\" ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot individual level response trajectories — ggswim","text":"swimmer plot data visualization used display individual subject data time. shows events outcomes points along horizontal line subject, allowing easy comparison pattern identification.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot individual level response trajectories — ggswim","text":"ggswim() understands following aesthetics (required aesthetics bold): x y alpha fill group linetype linewidth Note: ggswim() support mapping using color/colour.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot individual level response trajectories — ggswim","text":"","code":"# Simple ggswim call ggswim(   data = patient_data,   mapping = aes(     x = delta_t0_months,     y = pt_id,     fill = disease_assessment_status   ) )   # ggswim call with arrows ggswim(   data = patient_data,   mapping = aes(     x = delta_t0_months,     y = pt_id,     fill = disease_assessment_status   ),   arrow = arrow_status,   arrow_fill = \"cyan\",   arrow_head_length = ggplot2::unit(.25, \"inches\"),   arrow_neck_length = delta_today )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ggswim object — grid.draw.ggswim_obj","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"grid::grid.draw() methods objects classes 'ggswim_obj' 'ggcuminc'. implemented allow users directly call ggplot2::ggsave() 'ggswim' figures.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"# S3 method for ggswim_obj grid.draw(x, recording = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"x object class 'ggswim_obj' recording logical value indicate whether drawing     operation recorded Grid display list.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"None","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"ggswim(   data = patient_data,   mapping = aes(     x = delta_t0_months,     y = pt_id,     fill = disease_assessment_status   ) ) |>   grid.draw()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Infusion Events dataset — infusion_events","title":"Infusion Events dataset — infusion_events","text":"datasets provide information patients, infusion events, end study events. Trial data de-identified randomized general use.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infusion Events dataset — infusion_events","text":"","code":"data(infusion_events)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Infusion Events dataset — infusion_events","text":"object class tbl_df (inherits tbl, data.frame) 13 rows 4 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infusion Events dataset — infusion_events","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infusion Events dataset — infusion_events","text":"infusion_events contains pre-formatted time series data related infusions reinfusions patients patient_data. dataset applicable use add_marker().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/infusion_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infusion Events dataset — infusion_events","text":"","code":"infusion_events #> # A tibble: 13 × 4 #>    pt_id infusion_type infusion_delta_t0 infusion_delta_t0_months #>    <chr> <chr>                     <dbl>                    <dbl> #>  1 01    Infusion                      0                        0 #>  2 02    Infusion                      0                        0 #>  3 03    Infusion                      0                        0 #>  4 03    Reinfusion                  100                        3 #>  5 04    Infusion                      0                        0 #>  6 05    Infusion                      0                        0 #>  7 05    Reinfusion                  135                        4 #>  8 06    Infusion                      0                        0 #>  9 07    Infusion                      0                        0 #> 10 08    Infusion                      0                        0 #> 11 08    Reinfusion                   63                        2 #> 12 09    Infusion                      0                        0 #> 13 12    Infusion                      0                        0"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Patient Data dataset — patient_data","title":"Patient Data dataset — patient_data","text":"datasets provide information patients, infusion events, end study events. Trial data de-identified randomized general use.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patient Data dataset — patient_data","text":"","code":"data(patient_data)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Patient Data dataset — patient_data","text":"object class tbl_df (inherits tbl, data.frame) 83 rows 9 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Patient Data dataset — patient_data","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Patient Data dataset — patient_data","text":"patient_data contains pre-formatted time series data related disease status markers status markers can support arrows. dataset applicable use ggswim() add_marker().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Patient Data dataset — patient_data","text":"","code":"patient_data #> # A tibble: 83 × 9 #>    pt_id bcell_status disease_assessment_s…¹ infusion_type event_marker delta_t0 #>    <chr> <fct>        <chr>                  <chr>         <chr>           <dbl> #>  1 01    B-cell Reco… CR                     Infusion      disease_ass…      -85 #>  2 01    B-cell Reco… CR                     Infusion      infusion_ev…        0 #>  3 01    Not Applica… RD                     Infusion      disease_ass…       -1 #>  4 01    Not Applica… RD                     Infusion      infusion_ev…        0 #>  5 01    B-cell Apla… CR                     Infusion      disease_ass…       27 #>  6 01    B-cell Apla… CR                     Infusion      infusion_ev…        0 #>  7 01    B-cell Reco… CR                     Infusion      disease_ass…       55 #>  8 01    B-cell Reco… CR                     Infusion      end_study_e…       63 #>  9 02    B-cell Reco… RD                     Infusion      disease_ass…      -86 #> 10 02    B-cell Reco… RD                     Infusion      infusion_ev…        0 #> # ℹ 73 more rows #> # ℹ abbreviated name: ¹​disease_assessment_status #> # ℹ 3 more variables: delta_t0_months <dbl>, delta_today <dbl>, #> #   arrow_status <lgl>"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggswim object — print.ggswim_obj","title":"Print ggswim object — print.ggswim_obj","text":"Print ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ggswim object — print.ggswim_obj","text":"","code":"# S3 method for ggswim_obj print(x, ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggswim object — print.ggswim_obj","text":"x ggswim object ... used","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ggswim object — print.ggswim_obj","text":"ggplot","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggswim object — print.ggswim_obj","text":"","code":"ggswim(   data = patient_data,   mapping = aes(     x = delta_t0_months,     y = pt_id,     fill = disease_assessment_status   ) ) |>   print()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 %+%, aes, ggsave grid grid.draw","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve original vars from coerced vars — retrieve_original_aes","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"Attempt detect instances users manipulate aes() names ggswim requires access identify layer types downstream. instances coercion detected, attempt retrieve original aes() name.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"","code":"retrieve_original_aes(data, aes_mapping, aes_var)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"data data responsible current layer aes_mapping list mapping data (.e. unlist(mapping)) aes_var aesthetic variable test (ex: color, shape)","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"original variable name character string","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"ggswim references internal ggplot layers aesthetic mapping required downstream rendering. user applies coercion function, ggswim may able parse original variable. example, ggswim(mtcars, aes(x = hp, y = cyl, color = factor(disp)), rlang::get_expr() see color mapping aesthetic factor(disp), disp.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim Theme — theme_ggswim","title":"ggswim Theme — theme_ggswim","text":"Alternative themes ggswim plots: theme_ggswim(): Builds theme_minimal() removal grid lines aesthetic updates.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggswim Theme — theme_ggswim","text":"","code":"theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggswim Theme — theme_ggswim","text":"ggplot2 theme","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggswim Theme — theme_ggswim","text":"","code":"ggswim(   data = patient_data,   mapping = aes(     x = delta_t0_months,     y = pt_id,     fill = disease_assessment_status   ) ) +   theme_ggswim()"}]
