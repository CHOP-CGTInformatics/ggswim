[{"path":"https://chop-cgtinformatics.github.io/ggswim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ggswim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/gallery.html","id":"data-spotlight-pbcseq","dir":"Articles","previous_headings":"","what":"Data Spotlight: pbcseq","title":"Gallery","text":"next examples, work survival::pbcseq dataset survival package. dataset chosen contains number elements might expect see survival data including follow-times, event markers, subject statuses. Consult ?survival::pbcseq information dataset. Let’s first take look dataset: demo, let’s pay particular attention following variables: id: record identifier make y-axis day: time series data make x-axis trt: ’ll use “treatment” group define fill layer lanes status: record endpoint indicator, ’ll use delineate records continued deceased ascites, hepato, spiders: Various binary events ’ll designate swimmer plot markers make best use space. swimmer plot use first 20 records, lanes stretch length record’s enrollment period along x-axis, identified ID y-axis, filled grouped treatment category (trt). pre-work necessary get data right format shape swimmer plot. notably, day quite ready bar plot makes lanes ggswim. dataset, start date always 0, variable might adjust code encompass start end date (see Plotting Negative Swimmer Lanes example). Fortunately, really need max date record’s enrollment. Lastly, converting variables factors help us arranging swim plot effective way. Now need subset original data comprise swimmer lanes. ’ll also add column called alive, TRUE patient declared deceased end enrollment period (status == 2). allow us add arrows onto plot later (see Adding arrows ggswim information). prepare swimmer markers data subset, ’ll focus just ascites, hepato, spiders example. pivot_longer() tidyr package lets us expand subset easily manageable dataframe containing marker type, day marker occurred, associated record. Now everything need make swimmer plot! first call ggswim() makes use pbseq_lanes dataframe single call add_marker() uses newly created pbseq_markers dataframe. important note specify trt fill option lanes marker color markers. aesthetic parameters exclusive functions, explained greater detail documentation.","code":"library(survival)  pbcseq |>   rmarkdown::paged_table() pbcseq_prep <- survival::pbcseq |>   filter(id <= 20) |>   mutate(     .by = id,     min_day = min(day),     max_day = max(day)   ) |>   relocate(c(min_day, max_day), .after = day) |>   arrange(trt, max_day) |>   mutate(     id = factor(id, levels = unique(id)),     trt = factor(trt)   )  pbcseq_prep |>   rmarkdown::paged_table() pbcseq_lanes <- pbcseq_prep |>   select(id, trt, max_day, status) |>   mutate(alive = ifelse(status == \"2\", FALSE, TRUE)) |>   unique()  pbcseq_lanes |>   rmarkdown::paged_table() pbcseq_markers <- pbcseq_prep |>   select(id, day, ascites, hepato, spiders) |>   tidyr::pivot_longer(c(ascites, hepato, spiders),     names_to = \"marker\"   ) |>   filter(value == 1)  pbcseq_markers |>   rmarkdown::paged_table() ggswim(   data = pbcseq_lanes, aes(x = max_day, y = id, fill = trt),   arrow = \"alive\" ) +   add_marker(     data = pbcseq_markers,     aes(x = day, y = id, color = marker, shape = marker),     size = 3, alpha = 0.5   ) +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/gallery.html","id":"plotting-with-negative-swimmer-lanes","dir":"Articles","previous_headings":"","what":"Plotting with Negative Swimmer Lanes","title":"Gallery","text":"Let’s say dataset analysis period varying starting time points, occur 0. now, ’ve ever really worked classic datasets look 0 initial time point move positively x-axis. show , ’ll modify internal patient_status dataframe new dataframe called patient_status_negative: Notice replaced initial starting point given record 0 random value -5 0. Now let’s plot ggswim():  ggswim able handle starting point, even starting points variable. just requires little extra work get data right format, pivoting get time series data oen column. plot looks good, let’s make little aligned want display data. Let’s clean bit give identifiable vertical line separate positive negative time periods:","code":"set.seed(135) patient_status_negative <- patient_status |>   mutate(     value = case_when(       value == 0 ~ sample(c(-5:0), size = 30, replace = TRUE),       TRUE ~ value     )   )  patient_status_negative |>   rmarkdown::paged_table() ggswim(   patient_status_negative,   aes(x = value, y = subject_id, fill = cohort) ) ggswim(   patient_status_negative,   aes(x = value, y = subject_id, fill = cohort) ) +   ggplot2::geom_vline(xintercept = 0, linetype = 3) +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"building-swimmer-plots-with-aesthetic-mapping","dir":"Articles","previous_headings":"","what":"Building swimmer plots with aesthetic mapping","title":"Getting Started with ggswim","text":"start, let’s build swimmer plot using aes() dynamic mapping data. README, using ggswim’s internal patient_data list dataset. mentioned README, patient_status built reflect typical dataset wild. make work well appear nicely swimmer plot output, little bit preparation required. Unlike provide box, typical patient_status might look something like : Therefore, viewing available patient_status, keep mind undergone following data cleaning steps: pivot keeps time_start time_end one column addition sorting variable, time_sorting, support arrangement using summed times Arrangement data cohort groups, time sorted values, subject ID factor levels Now, let’s make plot using ggswim() first add_marker() call:  addition shapes symbols, ggswim supports use emojis rendering swimmer plots. add_marker() allows users specify shapes emojis using appropriate argument callouts (label shape). Let’s add layer using emojis via medication_administration dataset:  point working swimmer plot lanes two different kinds marker layers. Recall ggswim works within ggplot2 framework, therefore customization can done using ggplot2 theme styling functions users may already familiar :  However, ggswim also provides convenient theme function desired:","code":"#> # A tibble: 15 × 5 #>    subject_id cohort   status    time_start time_end #>    <fct>      <fct>    <ord>          <dbl>    <dbl> #>  1 1          Cohort A On Study        0        2.32 #>  2 1          Cohort A Off Study       2.32    19.7  #>  3 2          Cohort A On Study        0        8.16 #>  4 2          Cohort A Off Study       8.16    11.2  #>  5 3          Cohort A On Study        0        2.95 #>  6 3          Cohort A Off Study       2.95    13.9  #>  7 4          Cohort B On Study        0        4.73 #>  8 4          Cohort B Off Study       4.73    14.7  #>  9 5          Cohort A On Study        0        2.25 #> 10 5          Cohort A Off Study       2.25    13.1  #> 11 6          Cohort A On Study        0        3.39 #> 12 7          Cohort A On Study        0        8.72 #> 13 8          Cohort A On Study        0        1.41 #> 14 9          Cohort B On Study        0        4.98 #> 15 10         Cohort B On Study        0        8.19 library(ggswim)  patient_status #> # A tibble: 30 × 7 #>    subject_id cohort   status    alive name       value time_sorting #>    <fct>      <chr>    <chr>     <lgl> <chr>      <dbl>        <dbl> #>  1 8          Cohort A On Study  TRUE  time_start     0            2 #>  2 8          Cohort A On Study  TRUE  time_end       2            2 #>  3 6          Cohort A On Study  FALSE time_start     0            5 #>  4 6          Cohort A On Study  FALSE time_end       5            5 #>  5 7          Cohort A On Study  TRUE  time_start     0            8 #>  6 7          Cohort A On Study  TRUE  time_end       8            8 #>  7 2          Cohort A On Study  TRUE  time_start     0           16 #>  8 2          Cohort A On Study  TRUE  time_end       5           16 #>  9 2          Cohort A Off Study TRUE  time_start     5           16 #> 10 2          Cohort A Off Study TRUE  time_end       6           16 #> # ℹ 20 more rows p <- ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ) ) +   add_marker(     data = adverse_events,     mapping = aes(       x = time_of_event,       y = subject_id,       color = adverse_event_name,       shape = adverse_event_name     ),     size = 5   )  p p <- p +   add_marker(     data = medication_administration,     mapping = aes(       x = time_of_event,       y = subject_id,       label = medication,       color = name     ),     label.size = NA, fill = NA, size = 5   )  p library(ggplot2)  p +   labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggtitle(\"My Swim Plot\") +   theme_minimal() +   scale_color_manual(     name = \"Markers\",     values = c(\"firebrick\", \"tomato\", NA, NA, \"chartreuse2\")   ) +   scale_shape_manual(     name = \"Markers\",     values = c(19, 15, 8, 18)   ) +   scale_fill_manual(     name = \"Lanes\",     values = c(\"steelblue\", \"cyan\")   ) p +   labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggtitle(\"My Swim Plot\") +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"customizing-markers-a-deeper-dive","dir":"Articles","previous_headings":"","what":"Customizing Markers: A Deeper Dive","title":"Getting Started with ggswim","text":"world data, one size rarely fits . ’s ggswim caters dynamic static marker assignments. mean exactly? Imagine dataset want manually define color single, significant marker rather relying mapped variable. splitting adverse_events distinct data frames, can achieve customized effect. make come together, make sure include aes() name argument within add_marker(). serves crucial anchor point legend, ensuring clarity visualization. Now, let’s plot similarly previously:  example showcases ggswim’s ability handle different data structures varying sources. adaptable framework lets users customize output precisely unique requirements.","code":"adverse_event_cardio <- adverse_events |>   dplyr::filter(adverse_event_name == \"Cardiac Disorder\")  adverse_event_inf <- adverse_events |>   dplyr::filter(adverse_event_name == \"Infection\")  adverse_event_psych <- adverse_events |>   dplyr::filter(adverse_event_name == \"Psychiatric Disorder\") ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ) ) +   add_marker(     data = adverse_event_cardio,     mapping = aes(       x = time_of_event,       y = subject_id,       name = \"AE: Cardiac Disorder\"     ),     color = \"red\", size = 5   ) +   add_marker(     data = adverse_event_inf,     mapping = aes(       x = time_of_event,       y = subject_id,       name = \"AE: Infection\"     ),     color = \"blue\", size = 5, shape = 12   ) +   add_marker(     data = adverse_event_psych,     mapping = aes(       x = time_of_event,       y = subject_id,       name = \"AE: Psychiatric Disorder\"     ),     color = \"green\", size = 5, shape = 2   ) +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/ggswim.html","id":"additional-notes","dir":"Articles","previous_headings":"","what":"Additional notes","title":"Getting Started with ggswim","text":"essential points keep mind working ggswim: Handling Missing Data: ggswim support missing data mapping aesthetics. detected, developers receive warning, missing data may appear NA values display, excluded legend. Color Mapping ggswim(): Please note ggswim() support mapping using colour argument. Filling Markers add_marker(): Similarly, add_marker() support mapping using fill argument. Rendering Emojis Custom Shapes: ensure emojis custom shapes display correctly, users may need switch graphics rendering device AGG. considerations help make ggswim building visualizations.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2024). ggswim: Create Swimmer Plots ggplot2. R package version 0.1.0,  https://github.com/CHOP-CGTInformatics/ggswim, https://chop-cgtinformatics.github.io/ggswim/.","code":"@Manual{,   title = {ggswim: Create Swimmer Plots with ggplot2},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2024},   note = {R package version 0.1.0,  https://github.com/CHOP-CGTInformatics/ggswim},   url = {https://chop-cgtinformatics.github.io/ggswim/}, }"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"ggswim-","dir":"","previous_headings":"","what":"Create swimmer plots with - ggswim","title":"Create swimmer plots with - ggswim","text":"ggswim package provides convenient set commands easily create “swimmer” plots.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create swimmer plots with - ggswim","text":"can install development version ggswim like :","code":"devtools::install_github(\"CHOP-CGTInformatics/ggswim\")"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"ggswim-elegant-swimmer-plots-with-ggplot2","dir":"","previous_headings":"","what":"ggswim: Elegant Swimmer Plots with ggplot2","title":"Create swimmer plots with - ggswim","text":"ggswim simplifies creation stunning swimmer plots seamlessly integrating familiar ggplot2 framework, allowing developers effortlessly add layers customize displays needs. One ggswim’s key strengths ability streamline process generating clear, reproducible legends. ensures crucial points interest effectively communicated, enhancing narrative swimmer plot. Let’s dive right quick example showcase simplicity effectiveness ggswim!","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"exploring-the-sample-dataset","dir":"","previous_headings":"","what":"Exploring the Sample Dataset","title":"Create swimmer plots with - ggswim","text":"help get started, ggswim includes sample dataset named patient_status. dataset comprises three tibbles: patient_status: Designed ease use ggswim, may perfectly mirror real-world data, serves ideal starting point. 7 column tibble subject cohorts, statuses, start end times. adverse_events: 3 column tibble showcasing 3 kinds adverse events time occurred medication_administration: 4 column tibble showcasing 2 kinds medications time given can also access tibbles individually. Let’s load data dive creating swimmer plots!","code":"library(ggswim)  ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ),   arrow = alive ) +   add_marker(     data = adverse_events,     mapping = aes(       x = time_of_event,       y = subject_id,       color = adverse_event_name,       shape = adverse_event_name     ),     size = 5   ) +   add_marker(     data = medication_administration,     mapping = aes(       x = time_of_event,       y = subject_id,       label = medication,       color = name     ),     label.size = NA, fill = NA, size = 5   ) +   ggplot2::labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggplot2::ggtitle(\"My Swim Plot\") +   ggplot2::scale_color_manual(     name = \"Markers\",     values = c(\"firebrick\", \"forestgreen\", NA, NA, \"purple\")   ) +   ggplot2::scale_shape_manual(     name = \"Markers\",     values = c(19, 18, 15)   ) +   ggplot2::scale_fill_manual(     name = \"Lanes\",     values = c(\"steelblue1\", \"goldenrod1\")   ) +   theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"Provide description PR","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed Changes","title":"Description","text":"List changes bullet format: Change 1 Change 2 Change 3 Screenshots applicable, add screenshots help explain proposed changes","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"issue-addressed","dir":"","previous_headings":"","what":"Issue Addressed","title":"Description","text":"Closes #[provide issue number link ]","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"Description","text":"submitting PR, please check verify submission meets criteria: New/revised functions associated tests New/revised functions update downstream outputs associated static testing files (.RDS) updated inst/testdata/create_test_data.R New/revised functions use appropriate naming conventions New/revised functions don’t repeat code Code changes less 250 lines total Issues linked PR using GitHub’s list keywords appropriate reviewer assigned PR appropriate developers assigned PR Pre-release package version incremented using usethis::use_version()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review","dir":"","previous_headings":"","what":"Code Review","title":"Description","text":"section used reviewer developers Code Review PR submission","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review-checklist","dir":"","previous_headings":"","what":"Code Review Checklist","title":"Description","text":"checked new files follow naming conventions right place checked documentation complete, clear, without typos added/edited comments explain “” “” checked new variable function names follow naming conventions checked new tests written key business logic /bugs PR fixes checked new tests address important edge cases","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add arrows to plot using geom_segment — add_arrows","title":"Add arrows to plot using geom_segment — add_arrows","text":"helper function triggered user requests arrows appear ggswim(). uses geom_segment() function supply Adding 0-length segment end swim lanes tacking arrows using arrow argument.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add arrows to plot using geom_segment — add_arrows","text":"","code":"add_arrows(   data,   ggswim_obj,   mapping,   position,   arrow,   arrow_colour,   arrow_head_length,   arrow_neck_length,   arrow_fill,   arrow_type )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add arrows to plot using geom_segment — add_arrows","text":"data dataframe prepared use ggswim() ggswim_obj ggswim object mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". arrow column indicating swim lanes arrows applied. column must logical data type (T/F). arrow_colour Border/line color use arrow. Default \"black\". arrow_head_length unit specifying length arrow head (tip base). Must ggplot2 unit() object. Default ggplot2::unit(0.25, \"inches\"). arrow_neck_length length neck arrow end swim lane base arrow head. Either integer value column specifier. default, NULL, sets value proportional max lane value. arrow_fill Fill color/colour use arrow head (closed). Default NULL. arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. Default \"closed.\" ... arguments passed ggswim(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add markers of interest to level response trajectories — add_marker","title":"Add markers of interest to level response trajectories — add_marker","text":"\"Markers\" used specify events interest along response trajectories across individual lanes. add_marker() wraps geom_point() geom_label() depending users designation color/colour label arguments. See Aesthetics information.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add markers of interest to level response trajectories — add_marker","text":"","code":"add_marker(data = NULL, mapping = aes(), ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add markers of interest to level response trajectories — add_marker","text":"data dataframe prepared use ggswim(), either coming parent ggswim() function, another add_marker() call, new dataframe prepared use ggswim(). mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. ... arguments passed add_marker(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add markers of interest to level response trajectories — add_marker","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add markers of interest to level response trajectories — add_marker","text":"add_marker() understands following aesthetics (required aesthetics bold) using color/colour akin geom_point() x y color/colour alpha group shape size stroke add_marker() understands following aesthetics (required aesthetics bold) using label akin geom_label(). See \"Notes\" additional considerations requirements. x y color/colour label * name ** alpha angle family fontface group hjust lineheight size vjust Notes: add_marker() support mapping using fill. *using label, secondary color reference required make label appear color layer legend. **using dynamic color call, specifying name required aesthetic mapping render legend correctly.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add markers of interest to level response trajectories — add_marker","text":"","code":"add_marker(   data = adverse_events,   mapping = aes(     x = time_of_event,     y = subject_id,     color = adverse_event_name,     shape = adverse_event_name   ),   size = 5 ) #> mapping: x = ~time_of_event, y = ~subject_id, colour = ~adverse_event_name, shape = ~adverse_event_name  #> geom_point: na.rm = TRUE #> stat_identity: na.rm = TRUE #> position_identity"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind layer dataframes for legend — bind_layer_data","title":"Bind layer dataframes for legend — bind_layer_data","text":"Internal helper function returns layer data get_layer_data() bound dataframe help legend guide definitions.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind layer dataframes for legend — bind_layer_data","text":"","code":"bind_layer_data(ggswim_obj, layer_indices, layer_data, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind layer dataframes for legend — bind_layer_data","text":"ggswim_obj description layer_indices description layer_data description static_colours description","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind layer dataframes for legend — bind_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ggswim fixes and display updates — build_ggswim","title":"Apply ggswim fixes and display updates — build_ggswim","text":"function seeks correct output manual overrides introduced add_marker() depending combination layer types user provides. run automatically background print method via print.ggswim_obj().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim_obj ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ggswim fixes and display updates — build_ggswim","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply ggswim fixes and display updates — build_ggswim","text":"current state, build_ggswim() can work pre-rendered ggswim plot object, therefore added + operator chain. build_ggswim() makes use ggplot2::guides() dynamically override displays layers ggswim legend. also applies call ggplot2::scale_color_manual() applicable cases user calls static color/colour argument addition required color mapping aesthetic (handled arg: name).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply ggswim fixes and display updates — build_ggswim","text":"","code":"ggswim_obj <- ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ) ) build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","title":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"Supply users warning arrow_type \"closed\" arrow_fill argument specified. error occur, nothing indicate issue output.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"","code":"check_arrow_fill_type(arrow_type, arrow_fill)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_fill_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_arrows for arrow_fill and arrow_type arguments — check_arrow_fill_type","text":"arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. Default \"closed.\" arrow_fill Fill color/colour use arrow head (closed). Default NULL.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","title":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","text":"Supply users error arrow_neck_length integer, symbolic column parent dataset, default (NULL).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","text":"","code":"check_arrow_neck_length(arrow_neck_length)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_arrow_neck_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_arrows for arrow_neck_length argument — check_arrow_neck_length","text":"arrow_neck_length length neck arrow end swim lane base arrow head. Either integer value column specifier. default, NULL, sets value proportional max lane value.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":null,"dir":"Reference","previous_headings":"","what":"check for coerced data inside a ggswim function — check_coerced_data","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"Supply users error coercion data elements occurs inside ggswim() add_marker() rectified retrieve_original_aes().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"","code":"check_coerced_data(expr)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"layer_aes character vector test existence names dataset","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_coerced_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check for coerced data inside a ggswim function — check_coerced_data","text":"ggswim references internal ggplot layers aesthetic mapping required downstream rendering. user applies coercion function, ggswim may able parse original variable. example, ggswim(mtcars, aes(x = hp, y = cyl, color = factor(disp)), rlang::get_expr() see color mapping aesthetic factor(disp), disp.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"check build_ggswim receives a ggswim class object — check_ggswim_obj","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"Supply users error build_ggswim() used outside context ggswim_obj class object.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"","code":"check_ggswim_obj(obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check build_ggswim receives a ggswim class object — check_ggswim_obj","text":"obj ggplot object passed ggswim print method. Ideally, always enforced ggswim_obj class type ggswim used.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check add_markers for label and color arguments — check_marker_label_aes","title":"check add_markers for label and color arguments — check_marker_label_aes","text":"required, legend display label icons users supply color colour aes() along label. Since break app, warning thrown.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check add_markers for label and color arguments — check_marker_label_aes","text":"","code":"check_marker_label_aes(mapping)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_marker_label_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check add_markers for label and color arguments — check_marker_label_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported mapping args — check_supported_mapping_aes","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"ggswim() add_marker() support aesthetic mappings wrapped functions . design, helps build_ggswim() work appropriately.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"","code":"check_supported_mapping_aes(mapping, unsupported_aes, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported mapping args — check_supported_mapping_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. unsupported_aes character vector parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported position args — check_supported_position_args","title":"check for unsupported position args — check_supported_position_args","text":"ggswim() accepts position arguments either stack identity. Others dodge jitter supported.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported position args — check_supported_position_args","text":"","code":"check_supported_position_args(position, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_position_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported position args — check_supported_position_args","text":"position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an argument with checkmate — checkmate","title":"Check an argument with checkmate — checkmate","text":"Check argument checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an argument with checkmate — checkmate","text":"","code":"check_arg_is_character(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_dataframe(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_integerish(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_list(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_logical(x, ..., arg = caller_arg(x), call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an argument with checkmate — checkmate","text":"x object check ... additional arguments passed checkmate arg name argument include error message. Captured rlang::caller_arg() default call calling environment use error message req_cols required fields check_arg_is_supertbl()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an argument with checkmate — checkmate","text":"TRUE x passes checkmate check. error otherwise name checkmate function class","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value for error message — format_error_val","title":"Format value for error message — format_error_val","text":"Format value error message","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value for error message — format_error_val","text":"","code":"format_error_val(x)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value for error message — format_error_val","text":"x value format","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value for error message — format_error_val","text":"x atomic, x cli formatting truncate 5 values. Otherwise, string summarizing x produced as_label","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Layer Data — get_layer_data","title":"Build Layer Data — get_layer_data","text":"internal function looks color fill aesthetic mapping data constructed ggplot objects appends layer data associated data parent data frame.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Layer Data — get_layer_data","text":"","code":"get_layer_data(data, mapping, i = 1L, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Layer Data — get_layer_data","text":"data data responsible current layer mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. integer supply layer retrieve. none given, defaults 1L. static_colours inherited dataframe add_marker captures defines static color indices","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Layer Data — get_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Create swimmer plots using ggplot2 framework.","code":""},{"path":[]},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggswim: Create Swimmer Plots with ggplot2 — ggswim-package","text":"Maintainer: Richard Hanna richardshanna91@gmail.com (ORCID) Authors: Stephan Kadauke kadaukes@chop.edu (ORCID) Ezra Porter ezrajporter@gmail.com (ORCID)","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual level response trajectories — ggswim","title":"Plot individual level response trajectories — ggswim","text":"Visualize individual record response trajectories time using swimmer plot.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual level response trajectories — ggswim","text":"","code":"ggswim(   data,   mapping = aes(),   position = \"identity\",   arrow = NULL,   arrow_colour = \"black\",   arrow_head_length = unit(0.25, \"inches\"),   arrow_neck_length = NULL,   arrow_fill = NULL,   arrow_type = \"closed\",   ... )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual level response trajectories — ggswim","text":"data dataframe prepared use ggswim() mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. position Position adjustment. ggswim accepts either \"stack\", \"identity\" depending use case. Default \"identity\". arrow column indicating swim lanes arrows applied. column must logical data type (T/F). arrow_colour Border/line color use arrow. Default \"black\". arrow_head_length unit specifying length arrow head (tip base). Must ggplot2 unit() object. Default ggplot2::unit(0.25, \"inches\"). arrow_neck_length length neck arrow end swim lane base arrow head. Either integer value column specifier. default, NULL, sets value proportional max lane value. arrow_fill Fill color/colour use arrow head (closed). Default NULL. arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle. Default \"closed.\" ... arguments passed ggswim(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot individual level response trajectories — ggswim","text":"swimmer plot data visualization used display individual subject data time. shows events outcomes points along horizontal line subject, allowing easy comparison pattern identification.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot individual level response trajectories — ggswim","text":"ggswim() understands following aesthetics (required aesthetics bold): x y alpha fill group linetype linewidth Note: ggswim() support mapping using color/colour.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot individual level response trajectories — ggswim","text":"","code":"ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ),   position = \"identity\" )"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ggswim object — grid.draw.ggswim_obj","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"grid::grid.draw() methods objects classes 'ggswim_obj' 'ggcuminc'. implemented allow users directly call ggplot2::ggsave() 'ggswim' figures.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"# S3 method for ggswim_obj grid.draw(x, recording = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"x object class 'ggswim_obj' recording logical value indicate whether drawing     operation recorded Grid display list.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"None","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ggswim object — grid.draw.ggswim_obj","text":"","code":"ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ) ) |>   grid.draw()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Patient Dataset — patient_data","title":"Patient Dataset — patient_data","text":"dataset provides information patients, status, adverse events, medication administration.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patient Dataset — patient_data","text":"","code":"data(patient_data)  patient_status  adverse_events  medication_administration"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Patient Dataset — patient_data","text":"list containing three tibbles: patient_status tibble containing information patient status including subject ID, cohort, status, name, value, time sorting. adverse_events tibble containing information adverse events including subject ID, adverse event name, time event. medication_administration tibble containing information medication administration including subject ID, medication name, name, time event. object class tbl_df (inherits tbl, data.frame) 30 rows 7 columns. object class tbl_df (inherits tbl, data.frame) 14 rows 3 columns. object class tbl_df (inherits tbl, data.frame) 8 rows 4 columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Patient Dataset — patient_data","text":"dataset demonstration purposes .","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/patient_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Patient Dataset — patient_data","text":"","code":"patient_data #> $patient_status #> # A tibble: 30 × 7 #>    subject_id cohort   status    alive name       value time_sorting #>    <fct>      <chr>    <chr>     <lgl> <chr>      <dbl>        <dbl> #>  1 8          Cohort A On Study  TRUE  time_start     0            2 #>  2 8          Cohort A On Study  TRUE  time_end       2            2 #>  3 6          Cohort A On Study  FALSE time_start     0            5 #>  4 6          Cohort A On Study  FALSE time_end       5            5 #>  5 7          Cohort A On Study  TRUE  time_start     0            8 #>  6 7          Cohort A On Study  TRUE  time_end       8            8 #>  7 2          Cohort A On Study  TRUE  time_start     0           16 #>  8 2          Cohort A On Study  TRUE  time_end       5           16 #>  9 2          Cohort A Off Study TRUE  time_start     5           16 #> 10 2          Cohort A Off Study TRUE  time_end       6           16 #> # ℹ 20 more rows #>  #> $adverse_events #> # A tibble: 14 × 3 #>    subject_id adverse_event_name   time_of_event #>    <fct>      <chr>                        <dbl> #>  1 1          Psychiatric Disorder             5 #>  2 1          Psychiatric Disorder            12 #>  3 1          Infection                       10 #>  4 1          Infection                       18 #>  5 2          Cardiac Disorder                 3 #>  6 2          Cardiac Disorder                12 #>  7 3          Psychiatric Disorder             6 #>  8 3          Psychiatric Disorder            12 #>  9 3          Infection                        8 #> 10 3          Infection                       22 #> 11 4          Psychiatric Disorder             2 #> 12 4          Cardiac Disorder                15 #> 13 7          Psychiatric Disorder             5 #> 14 9          Infection                        5 #>  #> $medication_administration #> # A tibble: 8 × 4 #>   subject_id medication name         time_of_event #>   <fct>      <chr>      <chr>                <dbl> #> 1 1          ❌         Medication B             2 #> 2 1          ❌         Medication B            21 #> 3 2          ✅         Medication A             5 #> 4 2          ✅         Medication A            15 #> 5 4          ❌         Medication B             7 #> 6 4          ❌         Medication B            14 #> 7 7          ✅         Medication A             3 #> 8 9          ❌         Medication B             3 #>   patient_data$patient_status #> # A tibble: 30 × 7 #>    subject_id cohort   status    alive name       value time_sorting #>    <fct>      <chr>    <chr>     <lgl> <chr>      <dbl>        <dbl> #>  1 8          Cohort A On Study  TRUE  time_start     0            2 #>  2 8          Cohort A On Study  TRUE  time_end       2            2 #>  3 6          Cohort A On Study  FALSE time_start     0            5 #>  4 6          Cohort A On Study  FALSE time_end       5            5 #>  5 7          Cohort A On Study  TRUE  time_start     0            8 #>  6 7          Cohort A On Study  TRUE  time_end       8            8 #>  7 2          Cohort A On Study  TRUE  time_start     0           16 #>  8 2          Cohort A On Study  TRUE  time_end       5           16 #>  9 2          Cohort A Off Study TRUE  time_start     5           16 #> 10 2          Cohort A Off Study TRUE  time_end       6           16 #> # ℹ 20 more rows  patient_status #> # A tibble: 30 × 7 #>    subject_id cohort   status    alive name       value time_sorting #>    <fct>      <chr>    <chr>     <lgl> <chr>      <dbl>        <dbl> #>  1 8          Cohort A On Study  TRUE  time_start     0            2 #>  2 8          Cohort A On Study  TRUE  time_end       2            2 #>  3 6          Cohort A On Study  FALSE time_start     0            5 #>  4 6          Cohort A On Study  FALSE time_end       5            5 #>  5 7          Cohort A On Study  TRUE  time_start     0            8 #>  6 7          Cohort A On Study  TRUE  time_end       8            8 #>  7 2          Cohort A On Study  TRUE  time_start     0           16 #>  8 2          Cohort A On Study  TRUE  time_end       5           16 #>  9 2          Cohort A Off Study TRUE  time_start     5           16 #> 10 2          Cohort A Off Study TRUE  time_end       6           16 #> # ℹ 20 more rows  adverse_events #> # A tibble: 14 × 3 #>    subject_id adverse_event_name   time_of_event #>    <fct>      <chr>                        <dbl> #>  1 1          Psychiatric Disorder             5 #>  2 1          Psychiatric Disorder            12 #>  3 1          Infection                       10 #>  4 1          Infection                       18 #>  5 2          Cardiac Disorder                 3 #>  6 2          Cardiac Disorder                12 #>  7 3          Psychiatric Disorder             6 #>  8 3          Psychiatric Disorder            12 #>  9 3          Infection                        8 #> 10 3          Infection                       22 #> 11 4          Psychiatric Disorder             2 #> 12 4          Cardiac Disorder                15 #> 13 7          Psychiatric Disorder             5 #> 14 9          Infection                        5  medication_administration #> # A tibble: 8 × 4 #>   subject_id medication name         time_of_event #>   <fct>      <chr>      <chr>                <dbl> #> 1 1          ❌         Medication B             2 #> 2 1          ❌         Medication B            21 #> 3 2          ✅         Medication A             5 #> 4 2          ✅         Medication A            15 #> 5 4          ❌         Medication B             7 #> 6 4          ❌         Medication B            14 #> 7 7          ✅         Medication A             3 #> 8 9          ❌         Medication B             3"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggswim object — print.ggswim_obj","title":"Print ggswim object — print.ggswim_obj","text":"Print ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ggswim object — print.ggswim_obj","text":"","code":"# S3 method for ggswim_obj print(x, ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggswim object — print.ggswim_obj","text":"x ggswim object ... used","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ggswim object — print.ggswim_obj","text":"ggplot","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggswim object — print.ggswim_obj","text":"","code":"ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ) ) |>   print()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 %+%, aes, ggsave grid grid.draw","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve original vars from coerced vars — retrieve_original_aes","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"Attempt detect instances users manipulate aes() names ggswim requires access identify layer types downstream. instances coercion detected, attempt retrieve original aes() name.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"","code":"retrieve_original_aes(data, aes_mapping, aes_var)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"data data responsible current layer aes_mapping list mapping data (.e. unlist(mapping)) aes_var aesthetic variable test (ex: color, shape)","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"original variable name character string","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/retrieve_original_aes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve original vars from coerced vars — retrieve_original_aes","text":"ggswim references internal ggplot layers aesthetic mapping required downstream rendering. user applies coercion function, ggswim may able parse original variable. example, ggswim(mtcars, aes(x = hp, y = cyl, color = factor(disp)), rlang::get_expr() see color mapping aesthetic factor(disp), disp.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim Theme — theme_ggswim","title":"ggswim Theme — theme_ggswim","text":"Alternative themes ggswim plots: theme_ggswim(): Builds theme_minimal() removal grid lines aesthetic updates.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggswim Theme — theme_ggswim","text":"","code":"theme_ggswim()"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggswim Theme — theme_ggswim","text":"ggplot2 theme","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/theme_ggswim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggswim Theme — theme_ggswim","text":"","code":"ggswim(   data = patient_status,   mapping = aes(     x = value,     y = subject_id,     fill = cohort   ) ) +   theme_ggswim()"}]
