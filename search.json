[{"path":"https://chop-cgtinformatics.github.io/ggswim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ggswim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/intro_ggswim.html","id":"building-swimmer-plots-with-aesthetic-mapping","dir":"Articles","previous_headings":"","what":"Building swimmer plots with aesthetic mapping","title":"Introduction to ggswim","text":"first example, let‚Äôs build swimmer plot using aes() dynamic mapping data. ‚Äôll start initial dataframe, patient_data, build marker layers onto additional ‚Äúdose‚Äù dataframes: Now, let‚Äôs make plot using ggswim() two add_marker() calls:  great shapes points, wanted get fancy add labels like emojis? ggswim magic really shines. ggswim‚Äôs add_marker() allows types displays appear leg work rending appropriately legend. Let‚Äôs add medical emojis new dataframe ‚Äôll call does_type:  great , look better right? Remember earlier mentioned can use existing ggplot2 functions ggswim outputs? Let‚Äôs implement can find bit joy plot:","code":"library(ggswim) library(ggplot2)  patient_data <-   tibble::tibble(     id = 1:4,     trt = rep_len(c(\"Drug A\", \"Drug B\"), length.out = 4),     time_to_last_followup = c(5,2,4,7),     time_to_death = ifelse(id %% 2, time_to_last_followup, NA),     end_time = c(5,2,4,7)   )  dose_data_a <- tibble::tibble(   id = c(1,1,1,2,2,2,3,4,4,4),   type = sample(c(\"Dose I\", \"Dose II\"), 10, replace = TRUE),   time = c(0,1.5,2,0,0.5,1,1.25,2,3,7) )  dose_data_b <- tibble::tibble(   id = c(1,1,2,3,4),   type = sample(c(\"Dose III\", \"Dose IV\"), 5, replace = TRUE),   time = c(0.5, 0.75, 0.25, 3, 6) ) p <- patient_data |>   dplyr::mutate(time_start = 0) |>   tidyr::pivot_longer(cols = c(time_start, time_to_last_followup),                       values_to = \"time\",                       names_to = \"treatment_group\") |>   ggswim(     mapping = aes(y = id,         x = time,         fill = trt), width = 0.1   ) +   add_marker(data = dose_data_a,              mapping = aes(                x = time,                y = id,                shape = type,                color = type,              ), size = 3) +   add_marker(data = dose_data_b,              mapping = aes(                x = time,                y = id,                shape = type,                color = type,              ), size = 5)  p dose_type <- tibble::tibble(   id = c(1,2,3,4),   label = c(\"üíä\", \"üíâ\", \"üíä\", \"üíâ\"),   name = c(\"Method A\", \"Method B\", \"Method A\", \"Method B\"),   time = c(.15, 0.1, 2.25, 5.5) )  p <- p +    add_marker(     dose_type,     aes(x = time,         y = id,         label = label,         color = name),     label.size = NA, fill = NA, size = 5   )  p p +   labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggtitle(\"My Swimmer Plot\") +   theme_minimal() +   scale_color_manual(name = \"Markers\",                               values = c(\"firebrick\", \"tomato\", \"orange\", \"chartreuse2\", NA, NA)) +   scale_shape_manual(name = \"Markers\",                               values = c(19,15,8,18)) +   scale_fill_manual(name = \"Lanes\",                              values = c(\"steelblue\", \"cyan\", \"skyblue\", \"steelblue4\")) #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/intro_ggswim.html","id":"building-swimmer-plots-with-individual-markers","dir":"Articles","previous_headings":"","what":"Building swimmer plots with individual markers","title":"Introduction to ggswim","text":"data made, received equal, ggswim developed cater dynamic mapping markers well static assignment markers. mean ? Well, let‚Äôs say instead setting mapped aes() ‚Äúcolour‚Äù variable, instead one marker dataset supplied want define color . Let‚Äôs change previous datasets split contain one marker level per dataframe: work, still need specify name argument add_marker() acts anchor point legend. ‚Äôll notice dataframes dose_type_a dose_type_b label name column reference. Let‚Äôs plot similarly :  complicated set information illustrates ggswim able handle following complexities: Emoji point displays graph grouped intelligently appropriate legend layer Data various sources Marker mapping using combination static dynamic mapping associations","code":"dose_data_a <- tibble::tibble(   id = c(1,1,1,2,2,2,3,4,4,4),   type = sample(c(\"Dose I\"), 10, replace = TRUE),   time = c(0,1.5,2,0,0.5,1,1.25,2,3,7) )  dose_data_b <- tibble::tibble(   id = c(1,1,1,2,2,2,3,4,4,4),   type = sample(c(\"Dose II\"), 10, replace = TRUE),   time = c(.15,2,3,.5,0.9,1.3,1,4,1,8) )  dose_type_a <- tibble::tibble(   id = c(1,2),   label = c(\"üíä\", \"üíä\"),   name = c(\"Method A\", \"Method A\"),   time = c(.15, 0.1) ) p <- patient_data |>   dplyr::mutate(time_start = 0) |>   tidyr::pivot_longer(cols = c(time_start, time_to_last_followup),                       values_to = \"time\",                       names_to = \"treatment_group\") |>   ggswim(     aes(y = id,         x = time,         fill = trt)   ) +   add_marker(     data = dose_data_a,     mapping = aes(x = time, y = id, name = \"Dose I\"), colour = \"red\", size = 5   ) +   add_marker(     data = dose_data_b,     mapping = aes(x = time, y = id, name = \"Dose II\"), color = \"blue\", shape = 8   ) +   add_marker(     data = dose_type_a,     mapping = aes(x = time, y = id, label = label, color = name),     label.size = NA, fill = NA, size = 5   ) +    ggtitle(\"My Swimmer Plot\") +   labs(color = \"Event\", fill = \"Drug\") +   theme_minimal() #> Warning: Duplicated aesthetics after name standardisation: colour #> Duplicated aesthetics after name standardisation: colour  p"},{"path":"https://chop-cgtinformatics.github.io/ggswim/articles/intro_ggswim.html","id":"additional-notes","dir":"Articles","previous_headings":"","what":"Additional notes","title":"Introduction to ggswim","text":"ggswim support missing data mapping aesthetics. Developers warned missing data may appear display, removed legend. ggswim() support mapping using colour argument add_marker() support mapping using fill argument emojis shapes properly appear, users may need switch graphics rendering device AGG","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2023). ggswim: Create Swimmer Plots ggplot2. R package version 0.1.0.","code":"@Manual{,   title = {ggswim: Create Swimmer Plots with ggplot2},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"ggswim","dir":"","previous_headings":"","what":"Create swimmer plots with - ggswim","title":"Create swimmer plots with - ggswim","text":"ggswim package provides easy set commands create ‚Äúswimmer‚Äù plots.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create swimmer plots with - ggswim","text":"can install development version ggswim like :","code":"devtools::install_github(\"CHOP-CGTInformatics/ggswim\")"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Create swimmer plots with - ggswim","text":"‚Äôs core, ggswim package leverages already fantastic capabilities ggplot2 seeks preserve much flexibility structure provides possible. Therefore, using ggswim likely notice much documentation underlying functionality wrap ! makes different? ggswim provides opinionated decisions steer plots data provided way makes swimmer plots easily accessible easy build upon. Let‚Äôs start simple examples works.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"a-sample-data-set","dir":"","previous_headings":"","what":"A Sample Data Set","title":"Create swimmer plots with - ggswim","text":"First ‚Äôll define sets data work : patient_data: dataframe containing per-patient, record-level data dose_data_a & dose_data_b: dataframe two doses corresponding multiple potential time points patients patient_data dose_type: dataframe two drug distrbution method types identified using labels names","code":"set.seed(123) patient_data <-   tibble::tibble(     id = 1:4,     trt = rep_len(c(\"Drug A\", \"Drug B\"), length.out = 4),     time_to_last_followup = c(5,2,4,7),     time_to_death = ifelse(id %% 2, time_to_last_followup, NA),     end_time = c(5,2,4,7)   ) |> dplyr::mutate(time_start = 0) |>   tidyr::pivot_longer(cols = c(time_start, time_to_last_followup),                       values_to = \"time\",                       names_to = \"treatment_group\")  dose_data_a <- tibble::tibble(   id2 = c(1,1,1,2,2,2,3,4,4,4),   type = sample(c(\"Dose I\", \"Dose II\"), 10, replace = TRUE),   time = c(0,1.5,2,0,0.5,1,1.25,2,3,7) )  dose_data_b <- tibble::tibble(   id3 = c(1,1,2,3,4),   type2 = sample(c(\"Dose III\", \"Dose IV\"), 5, replace = TRUE),   time = c(0.5, 0.75, 0.25, 3, 6) )  dose_type <- tibble::tibble(   id4 = c(1,2,3,4),   label = c(\"üíä\", \"üíâ\", \"üíä\", \"üíâ\"),   name = c(\"Method A\", \"Method B\", \"Method A\", \"Method B\"),   time = c(.15, 0.1, 2.25, 5.5) ) library(ggswim) library(ggplot2)  p <- patient_data |>    ggswim(     aes(y = id,         x = time,         fill = trt), width = 0.1   ) +   add_marker(data = dose_data_a,              mapping = aes(                x = time,                y = id2,                shape = type,                color = type              ), size = 3) +   add_marker(data = dose_data_b,              mapping = aes(                x = time,                y = id3,                shape = type2,                color = type2,              ), size = 5) +   add_marker(     data = dose_type,     mapping = aes(x = time,         y = id4,         label = label,         color = name),     label.size = NA, fill = NA, size = 5   )  p +   ggplot2::labs(x = \"Time\", y = \"Subject ID\", color = \"Markers\") +   ggplot2::ggtitle(\"My Swim Plot\") +   ggplot2::theme_minimal() +   ggplot2::scale_color_manual(name = \"Markers\",                               values = c(\"firebrick\", \"tomato\", \"orange\", \"chartreuse2\", NA, NA)) +   ggplot2::scale_shape_manual(name = \"Markers\",                               values = c(19,15,8,18)) +   ggplot2::scale_fill_manual(name = \"Lanes\",                              values = c(\"steelblue\", \"cyan\", \"skyblue\", \"steelblue4\"))"},{"path":"https://chop-cgtinformatics.github.io/ggswim/index.html","id":"future-plans","dir":"","previous_headings":"A Sample Data Set","what":"Future Plans","title":"Create swimmer plots with - ggswim","text":"lot work ggswim! Future plans include: full test suite Enforced checks Vignettes documentation","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"Provide description PR","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed Changes","title":"Description","text":"List changes bullet format: Change 1 Change 2 Change 3 Screenshots applicable, add screenshots help explain proposed changes","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"issue-addressed","dir":"","previous_headings":"","what":"Issue Addressed","title":"Description","text":"Closes #[provide issue number link ]","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"Description","text":"submitting PR, please check verify submission meets criteria: New/revised functions associated tests New/revised functions update downstream outputs associated static testing files (.RDS) updated inst/testdata/create_test_data.R New/revised functions use appropriate naming conventions New/revised functions don‚Äôt repeat code Code changes less 250 lines total Issues linked PR using GitHub‚Äôs list keywords appropriate reviewer assigned PR appropriate developers assigned PR Pre-release package version incremented using usethis::use_version()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review","dir":"","previous_headings":"","what":"Code Review","title":"Description","text":"section used reviewer developers Code Review PR submission","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/pull_request_template.html","id":"code-review-checklist","dir":"","previous_headings":"","what":"Code Review Checklist","title":"Description","text":"checked new files follow naming conventions right place checked documentation complete, clear, without typos added/edited comments explain ‚Äú‚Äù ‚Äú‚Äù checked new variable function names follow naming conventions checked new tests written key business logic /bugs PR fixes checked new tests address important edge cases","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Add markers of interest to level response trajectories ‚Äî add_marker","title":"Add markers of interest to level response trajectories ‚Äî add_marker","text":"\"Markers\" used specify events interest along response trajectories across individual lanes.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add markers of interest to level response trajectories ‚Äî add_marker","text":"","code":"add_marker(data = NULL, mapping = aes(), ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add markers of interest to level response trajectories ‚Äî add_marker","text":"data dataframe prepared use ggswim(), either coming parent ggswim() function, another add_marker() call, new dataframe prepared use ggswim(). mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. ... arguments passed add_marker(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add markers of interest to level response trajectories ‚Äî add_marker","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/add_marker.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add markers of interest to level response trajectories ‚Äî add_marker","text":"add_marker() understands following aesthetics (required aesthetics bold) using color/colour akin geom_point() x y color/colour alpha group shape size stroke add_marker() understands following aesthetics (required aesthetics bold) using label akin geom_label(). See \"Notes\" additional considerations requirements. x y color/colour label * name ** alpha angle family fontface group hjust lineheight size vjust Notes: add_marker() support mapping using fill. *using label, secondary color reference required make label appear color layer legend. **using dynamic color call, specifying name required aesthetic mapping render legend correctly.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind layer dataframes for legend ‚Äî bind_layer_data","title":"Bind layer dataframes for legend ‚Äî bind_layer_data","text":"Internal helper function returns layer data get_layer_data() bound dataframe help legend guide definitions.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind layer dataframes for legend ‚Äî bind_layer_data","text":"","code":"bind_layer_data(ggswim_obj, layer_indices, layer_data, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind layer dataframes for legend ‚Äî bind_layer_data","text":"ggswim_obj description layer_indices description layer_data description static_colours description","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/bind_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind layer dataframes for legend ‚Äî bind_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ggswim fixes and display updates ‚Äî build_ggswim","title":"Apply ggswim fixes and display updates ‚Äî build_ggswim","text":"function seeks correct output manual overrides introduced add_marker() depending combination layer types user provides. run automatically background print method via print.ggswim_obj().","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ggswim fixes and display updates ‚Äî build_ggswim","text":"","code":"build_ggswim(ggswim_obj)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ggswim fixes and display updates ‚Äî build_ggswim","text":"ggswim_obj ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ggswim fixes and display updates ‚Äî build_ggswim","text":"ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/build_ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply ggswim fixes and display updates ‚Äî build_ggswim","text":"current state, build_ggswim() can work pre-rendered ggswim plot object, therefore added + operator chain. build_ggswim() makes use ggplot2::guides() dynamically override displays layers ggswim legend. also applies call ggplot2::scale_color_manual() applicable cases user calls static color/colour argument addition required color mapping aesthetic (handled arg: name).","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"check for unsupported mapping args ‚Äî check_supported_mapping_aes","title":"check for unsupported mapping args ‚Äî check_supported_mapping_aes","text":"ggswim() add_marker() support aesthetic mappings wrapped functions . design, helps build_ggswim() work appropriately.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for unsupported mapping args ‚Äî check_supported_mapping_aes","text":"","code":"check_supported_mapping_aes(mapping, unsupported_aes, parent_func)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/check_supported_mapping_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for unsupported mapping args ‚Äî check_supported_mapping_aes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. unsupported_aes character vector parent_func function called, referenced message output","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an argument with checkmate ‚Äî checkmate","title":"Check an argument with checkmate ‚Äî checkmate","text":"Check argument checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an argument with checkmate ‚Äî checkmate","text":"","code":"check_arg_is_character(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_dataframe(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_integerish(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_list(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_logical(x, ..., arg = caller_arg(x), call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an argument with checkmate ‚Äî checkmate","text":"x object check ... additional arguments passed checkmate arg name argument include error message. Captured rlang::caller_arg() default call calling environment use error message req_cols required fields check_arg_is_supertbl()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/checkmate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an argument with checkmate ‚Äî checkmate","text":"TRUE x passes checkmate check. error otherwise name checkmate function class","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for missing data ‚Äî drop_missing_override_data","title":"Check for missing data ‚Äî drop_missing_override_data","text":"Internal checking function responsible alerting user missing data present colour aesthetic layer. ggswim allow automatically correct dropping missing data.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for missing data ‚Äî drop_missing_override_data","text":"","code":"drop_missing_override_data(override)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for missing data ‚Äî drop_missing_override_data","text":"override override list object, responsible powering guides()","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/drop_missing_override_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for missing data ‚Äî drop_missing_override_data","text":"override list object, responsible powering guides(). Corrected missing data exists.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value for error message ‚Äî format_error_val","title":"Format value for error message ‚Äî format_error_val","text":"Format value error message","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value for error message ‚Äî format_error_val","text":"","code":"format_error_val(x)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value for error message ‚Äî format_error_val","text":"x value format","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/format_error_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value for error message ‚Äî format_error_val","text":"x atomic, x cli formatting truncate 5 values. Otherwise, string summarizing x produced as_label","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Layer Data ‚Äî get_layer_data","title":"Build Layer Data ‚Äî get_layer_data","text":"internal function looks color fill aesthetic mapping data constructed ggplot objects appends layer data associated data parent data frame.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Layer Data ‚Äî get_layer_data","text":"","code":"get_layer_data(data, mapping, i = 1L, static_colours = NULL)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Layer Data ‚Äî get_layer_data","text":"data data responsible current layer mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. integer supply layer retrieve. none given, defaults 1L. static_colours description","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/get_layer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Layer Data ‚Äî get_layer_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswim: Create Swimmer Plots with ggplot2 ‚Äî ggswim-package","title":"ggswim: Create Swimmer Plots with ggplot2 ‚Äî ggswim-package","text":"Create swimmer plots using ggplot2 framework.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggswim: Create Swimmer Plots with ggplot2 ‚Äî ggswim-package","text":"Maintainer: Richard Hanna richardshanna91@gmail.com Authors: Stephan Kadauke kadaukes@chop.edu Ezra Porter ezrajporter@gmail.com","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual level response trajectories ‚Äî ggswim","title":"Plot individual level response trajectories ‚Äî ggswim","text":"Visualize individual record response trajectories time using swimmer plot.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual level response trajectories ‚Äî ggswim","text":"","code":"ggswim(data, mapping = aes(), ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual level response trajectories ‚Äî ggswim","text":"data dataframe prepared use ggswim() mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. information accepted mapping arguments can found Aesthetics. ... arguments passed ggswim(), often aesthetic fixed values, .e. color = \"red\" size = 3.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot individual level response trajectories ‚Äî ggswim","text":"swimmer plot data visualization used display individual subject data time. shows events outcomes points along horizontal line subject, allowing easy comparison pattern identification.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/ggswim.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot individual level response trajectories ‚Äî ggswim","text":"ggswim() understands following aesthetics (required aesthetics bold): x y alpha fill group linetype linewidth Note: ggswim() support mapping using color/colour.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ggswim object ‚Äî grid.draw.ggswim_obj","title":"Draw ggswim object ‚Äî grid.draw.ggswim_obj","text":"Draw ggswim object","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ggswim object ‚Äî grid.draw.ggswim_obj","text":"","code":"# S3 method for ggswim_obj grid.draw(x, recording = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ggswim object ‚Äî grid.draw.ggswim_obj","text":"x object class 'ggswim_obj' recording logical value indicate whether drawing     operation recorded Grid display list.","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ggswim object ‚Äî grid.draw.ggswim_obj","text":"None","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/grid.draw.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ggswim object ‚Äî grid.draw.ggswim_obj","text":"","code":"# TODO: add example"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ggswim ‚Äî print.ggswim_obj","title":"Print ggswim ‚Äî print.ggswim_obj","text":"Print ggswim","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ggswim ‚Äî print.ggswim_obj","text":"","code":"# S3 method for ggswim_obj print(x, ...)"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ggswim ‚Äî print.ggswim_obj","text":"x ggswim object ... used","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ggswim ‚Äî print.ggswim_obj","text":"ggplot","code":""},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/print.ggswim_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ggswim ‚Äî print.ggswim_obj","text":"","code":"# TODO: add example"},{"path":"https://chop-cgtinformatics.github.io/ggswim/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. ggplot2 ggsave grid grid.draw","code":""}]
